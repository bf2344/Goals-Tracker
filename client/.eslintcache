[{"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\index.js":"1","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\App.js":"2","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\utils\\UserContext.js":"3","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberWidgetContainer\\index.js":"4","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListWidgetContainer\\index.js":"5","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GraphWidgetContainer\\index.js":"6","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\pages\\GoalUpdate\\index.js":"7","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\pages\\GoalCreation\\index.js":"8","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\BarChart\\index.js":"9","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\SideBar\\index.js":"10","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListWidget\\index.js":"11","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GraphWidget\\index.js":"12","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberWidget\\index.js":"13","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GoalModal\\index.js":"14","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Profile\\index.js":"15","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Widget\\index.js":"16","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\LogoutButton\\index.js":"17","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\LoginButton\\index.js":"18","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Progress\\index.js":"19","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListItem\\index.js":"20","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberDisplay\\index.js":"21","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListDisplay\\index.js":"22","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Loading\\index.js":"23"},{"size":578,"mtime":1610940089559,"results":"24","hashOfConfig":"25"},{"size":3198,"mtime":1612052271363,"results":"26","hashOfConfig":"25"},{"size":408,"mtime":1611851303534,"results":"27","hashOfConfig":"25"},{"size":2146,"mtime":1612052923360,"results":"28","hashOfConfig":"25"},{"size":1621,"mtime":1611851594412,"results":"29","hashOfConfig":"25"},{"size":1575,"mtime":1610160325642,"results":"30","hashOfConfig":"25"},{"size":4127,"mtime":1612050155702,"results":"31","hashOfConfig":"25"},{"size":5422,"mtime":1612050155700,"results":"32","hashOfConfig":"25"},{"size":918,"mtime":1612050155690,"results":"33","hashOfConfig":"25"},{"size":920,"mtime":1612050715045,"results":"34","hashOfConfig":"25"},{"size":2407,"mtime":1612050155690,"results":"35","hashOfConfig":"25"},{"size":2819,"mtime":1610160346207,"results":"36","hashOfConfig":"25"},{"size":1469,"mtime":1610160325660,"results":"37","hashOfConfig":"25"},{"size":731,"mtime":1610921059601,"results":"38","hashOfConfig":"25"},{"size":1164,"mtime":1611851594414,"results":"39","hashOfConfig":"25"},{"size":1261,"mtime":1610160325667,"results":"40","hashOfConfig":"25"},{"size":338,"mtime":1612050155694,"results":"41","hashOfConfig":"25"},{"size":305,"mtime":1612050155692,"results":"42","hashOfConfig":"25"},{"size":791,"mtime":1610160325665,"results":"43","hashOfConfig":"25"},{"size":624,"mtime":1610922683507,"results":"44","hashOfConfig":"25"},{"size":675,"mtime":1612052800902,"results":"45","hashOfConfig":"25"},{"size":312,"mtime":1610160325645,"results":"46","hashOfConfig":"25"},{"size":1158,"mtime":1610160325652,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1d4p1wq",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\index.js",[],["101","102"],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\App.js",["103","104"],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\utils\\UserContext.js",["105"],"import React, { createContext } from 'react';\r\n\r\nconst UserContext = createContext({\r\n  _id: '',\r\n  name: '',\r\n  email: '',\r\n  goals: [{\r\n    _id: '',\r\n    title: '',\r\n    description: '',\r\n    date: '',\r\n    color: '',\r\n    popular: '',\r\n    highPriority: false,\r\n    goalUpdates: [{\r\n      _id: '',\r\n      updatedAt: '',\r\n      progress: 0,\r\n      note: ''\r\n    }]\r\n  }]\r\n});\r\n\r\nexport default UserContext;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberWidgetContainer\\index.js",["106"],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListWidgetContainer\\index.js",["107","108"],"import React, { Component, useState, useEffect } from 'react';\r\nimport ListWidget from '../ListWidget/index';\r\n\r\nclass ListWidgetContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      values: []\r\n    }\r\n\r\n    // Bind function to refer to component\r\n    // this.getData = this.getData.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({loading: false, values: nextProps.userGoals})\r\n  }\r\n\r\n  // Fetch data when the component is added\r\n  // componentDidMount() {\r\n  //   this.getData().then(_ => {\r\n  //     // Re-fetch every minute\r\n  //     this.interval = setInterval(this.getData, 60000);\r\n  //   });\r\n  // }\r\n\r\n  // // Fetch new data\r\n  // getData() {\r\n  //   // Tell the Widget component we're currently loading\r\n  //   this.setState({ loading: true });\r\n\r\n  //   const url = this.props.href;\r\n  //   return fetch(url)\r\n  //     .then(response => response.json())\r\n  //     .then(res => {\r\n  //       console.log(\"shit\")\r\n  //       // Update state with data\r\n  //       this.setState({ loading: false, values: res });\r\n  //     })\r\n  //     .catch(error => {\r\n  //       // At least tell the Widget component we have stopped loading\r\n  //       console.log(error);\r\n  //       this.setState({ loading: false });\r\n  //     });\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      // Render the list widget\r\n      <ListWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} listItems={this.state.values} loading={this.state.loading} />\r\n    );\r\n  }\r\n}\r\nexport default ListWidgetContainer;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GraphWidgetContainer\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\pages\\GoalUpdate\\index.js",["109","110","111"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, FormGroup, Label, Input, Container, Row, Col, Button } from 'reactstrap';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport GoalModal from '../../components/GoalModal';\r\nimport './index.css';\r\n\r\nconst GoalUpdate = () => {\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [goalData, setGoalData] = useState();\r\n  const [updateData, setUpdateData] = useState({\r\n    progress: 0,\r\n    note: \"\"\r\n  });\r\n  const { goalId } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/goal/get/${goalId}`)\r\n      .then(res => res.json()).then(data => {\r\n        setGoalData(data)\r\n        if(data.goalUpdates.length){\r\n          setUpdateData({...updateData, progress: data.goalUpdates[data.goalUpdates.length - 1].progress})\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [goalId]);\r\n\r\n  const handleInputChange = (name, value) => {\r\n    setUpdateData({ ...updateData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = () =>{\r\n    fetch(`/api/goal/update/${goalId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updateData)\r\n    })\r\n      .then(res => {\r\n        console.log(res.status)\r\n        if(res.status == 200){\r\n          setShowModal(true)\r\n          setTimeout(()=>{\r\n            history.push('/')\r\n          }, 2000)\r\n        } else{\r\n          console.log(\"something went wrong with the update\")\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const backgroundColor = goalData ? goalData.color : 'lightGreen';\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n      {showModal &&\r\n          <Col sm={12}>\r\n            <GoalModal showModal={showModal} className={showModal ? \"show\" : \"hide\"} buttonLabel=\"X\" status=\"updated\" />\r\n          </Col>\r\n        }\r\n        <Col sm={12} md={9} lg={6} style={{ backgroundColor }}>\r\n          <Form>\r\n            {goalData &&\r\n              <h2>{goalData.title}</h2>\r\n            }\r\n            {goalData && goalData.image &&\r\n              <img src={goalData.image} alt=\"picture of goal\" />\r\n            }\r\n            {goalData &&\r\n              <>\r\n                <p>{goalData.description}</p>\r\n                <p>Originally created on : {goalData.createdAt}</p>\r\n              </>\r\n            }\r\n            <FormGroup row>\r\n              <Label\r\n                for=\"progressInput\"\r\n                >\r\n                Progress</Label>\r\n              <Col sm={2}>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"progress\"\r\n                  id=\"progressInput\"\r\n                  placeholder=\"00\"\r\n                  value={updateData.progress}\r\n                  onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              {/* <Label\r\n                for=\"progressRange\">\r\n                Progress</Label> */}\r\n              <Input\r\n                type=\"range\"\r\n                name=\"progress\"\r\n                id=\"progressRange\"\r\n                value={updateData.progress}\r\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label\r\n                for=\"progressNote\"\r\n                >\r\n                Write a note about your progress here</Label>\r\n              <Col sm={10}>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"note\"\r\n                  id=\"progressNote\"\r\n                  onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup check row>\r\n              <Col sm={{ size: 10, offset: 2 }}>\r\n                <Button  onClick={()=> handleSubmit()}>Submit</Button>\r\n              </Col>\r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default GoalUpdate;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\pages\\GoalCreation\\index.js",["112","113"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, FormText, Container, Row, Col, Button } from 'reactstrap';\r\nimport './index.css';\r\nimport GoalModal from '../../components/GoalModal';\r\nimport UserContext from '../../utils/UserContext';\r\n\r\nconst GoalCreation = () => {\r\n  const [inputValues, setInputValues] = useState({\r\n    title: '',\r\n    description: '',\r\n    completionDate: '',\r\n    color: '',\r\n    popular: '',\r\n    upload: '',\r\n    highPriority: false,\r\n    goalUpdates: []\r\n  })\r\n  const { userId } = useParams();\r\n  const history = useHistory()\r\n  const userInfo = useContext(UserContext)\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  const handleGoalSubmit = () => {\r\n    fetch(`/api/user/${userId}/goal/add`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(inputValues),\r\n      headers: { \r\n        \"Content-type\": \"application/json\"\r\n    } \r\n    }).then(res => {\r\n      if(res){\r\n        setShowModal(true)\r\n        setTimeout(() => {\r\n          history.push('/')\r\n        }, 2000);\r\n      } else {\r\n        console.log(res)\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleInputChange = (name, value) => {\r\n    setInputValues({ ...inputValues, [name]: value })\r\n  }\r\n\r\n  const handlePopularClick = value => {\r\n    setInputValues({ ...inputValues, popular: value })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {showModal &&\r\n          <Col sm={12}>\r\n            <GoalModal showModal={showModal} className={showModal ? \"show\" : \"hide\"} buttonLabel=\"X\" status=\"created\" />\r\n          </Col>\r\n        }\r\n        <Col sm={12} md={9} lg={6} className='form-column'>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label for=\"exampleName\">Goal Name</Label>\r\n              <Input\r\n                type=\"name\"\r\n                name=\"title\"\r\n                id=\"exampleEmail\"\r\n                placeholder=\"with a placeholder\"\r\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleText\">Goal Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                id=\"exampleText\"\r\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleDate\">Goal End Date</Label>\r\n              <Input\r\n                type=\"date\"\r\n                name=\"completionDate\"\r\n                id=\"exampleDate\"\r\n                placeholder=\"date placeholder\"\r\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleColor\">Color Code This Goal</Label>\r\n              <Input\r\n                type=\"color\"\r\n                name=\"color\"\r\n                id=\"exampleColor\"\r\n                placeholder=\"color placeholder\"\r\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleSelect\">Does your goal fall under one of these categories?</Label>\r\n              <Input type=\"select\" onChange={(e) => handlePopularClick(e.currentTarget.value)} name=\"select\" id=\"exampleSelect\">\r\n                <option\r\n                  name='financial'\r\n                  onSelect={() => handlePopularClick()}>\r\n                  Financial</option>\r\n                <option\r\n                  name='healthFitness'\r\n                  onClick={() => handlePopularClick()}>\r\n                  Health/Fitness</option>\r\n                <option\r\n                  name='personalWellbeing'\r\n                  onClick={() => handlePopularClick()}>\r\n                  Personal Wellbeing</option>\r\n                <option\r\n                  name='professionalAchievement'\r\n                  onClick={() => handlePopularClick()}>\r\n                  Professional Achievement</option>\r\n                <option\r\n                  name='personalAchievement'\r\n                  onClick={() => handlePopularClick()}>\r\n                  Personal Achievement</option>\r\n                <option\r\n                  name='habit'\r\n                  onClick={() => handlePopularClick()}>\r\n                  Build/Break A Habit</option>\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleFile\">Upload</Label>\r\n              <Input\r\n                type=\"file\"\r\n                name='file'\r\n                id=\"exampleFile\" />\r\n              <FormText\r\n                color=\"muted\">\r\n                Upload an image of your goal here\r\n              </FormText>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  onClick={() => setInputValues({ ...inputValues, highPriority: !inputValues.checked })} /> High priority goal?\r\n              </Label>\r\n            </FormGroup>\r\n            <Button onClick={() => handleGoalSubmit()}>Submit</Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default GoalCreation;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\BarChart\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\SideBar\\index.js",["114"],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListWidget\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GraphWidget\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberWidget\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GoalModal\\index.js",["115","116","117"],"import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst GoalModal = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\r\n      <Modal isOpen={props.showModal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Goal Saved</ModalHeader>\r\n        <ModalBody>\r\n          YOUR GOAL HAS BEEN SUCCESSFULLY {props.status.toUpperCase()}\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoalModal;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Profile\\index.js",["118","119","120"],"import React, { useEffect, useState } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst Profile = () => {\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n  const {userData, setUserData} = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    emailVerified: false\r\n  })\r\n\r\n  // console.log(isAuthenticated)\r\n  // console.log(user)\r\n\r\n  // useEffect(()=>{\r\n  //   // setUserData({\r\n  //   //   name: user.name,\r\n  //   //   email: user.email,\r\n  //   //   emailVerified: user.emailVerified\r\n  //   // })\r\n  //     fetch('/api/user/add', {\r\n  //       method: 'POST',\r\n  //       body: JSON.stringify(userData),\r\n  //       headers: { \r\n  //         \"Content-type\": \"application/json\"\r\n  //     } \r\n  //     })\r\n  //       .then(res => res.json())\r\n  //       .then(data => console.log(data))\r\n  //       .catch(err => console.log(err))\r\n  // }, [])\r\n\r\n\r\n\r\n\r\n  if (isLoading) {\r\n    return <div>Loading ...</div>;\r\n  }\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <div>\r\n        <img src={user.picture} alt={user.name} />\r\n        <h2>{user.name}</h2>\r\n        <p>{user.email}</p>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Profile;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Widget\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\LogoutButton\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\LoginButton\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Progress\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListItem\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberDisplay\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListDisplay\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Loading\\index.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":12,"column":8,"nodeType":"127","messageId":"128","endLine":12,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":31,"column":6,"nodeType":"131","endLine":31,"endColumn":12,"suggestions":"132"},{"ruleId":"125","severity":1,"message":"133","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":13},{"ruleId":"125","severity":1,"message":"134","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":13},{"ruleId":"125","severity":1,"message":"135","line":1,"column":28,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"136","line":1,"column":38,"nodeType":"127","messageId":"128","endLine":1,"endColumn":47},{"ruleId":"129","severity":1,"message":"137","line":26,"column":6,"nodeType":"131","endLine":26,"endColumn":14,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":42,"column":23,"nodeType":"141","messageId":"142","endLine":42,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":70,"column":15,"nodeType":"145","endLine":70,"endColumn":65},{"ruleId":"125","severity":1,"message":"136","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"146","line":21,"column":9,"nodeType":"127","messageId":"128","endLine":21,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":23,"column":7,"nodeType":"145","endLine":23,"endColumn":47},{"ruleId":"125","severity":1,"message":"149","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"125","severity":1,"message":"150","line":2,"column":49,"nodeType":"127","messageId":"128","endLine":2,"endColumn":60},{"ruleId":"125","severity":1,"message":"151","line":6,"column":5,"nodeType":"127","messageId":"128","endLine":6,"endColumn":16},{"ruleId":"125","severity":1,"message":"136","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"152","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":18},{"ruleId":"125","severity":1,"message":"153","line":6,"column":20,"nodeType":"127","messageId":"128","endLine":6,"endColumn":31},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'BarChart' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postData' and 'userData.length'. Either include them or remove the dependency array.","ArrayExpression",["156"],"'React' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array. You can also do a functional update 'setUpdateData(u => ...)' if you only need 'updateData' in the 'setUpdateData' call.",["157"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'userInfo' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Button' is defined but never used.","'ModalFooter' is defined but never used.","'buttonLabel' is assigned a value but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [postData, user, userData.length]",{"range":"162","text":"163"},"Update the dependencies array to be: [goalId, updateData]",{"range":"164","text":"165"},[1125,1131],"[postData, user, userData.length]",[911,919],"[goalId, updateData]"]