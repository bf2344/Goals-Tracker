[{"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\index.js":"1","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\App.js":"2","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberWidgetContainer\\index.js":"3","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListWidgetContainer\\index.js":"4","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GraphWidgetContainer\\index.js":"5","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListWidget\\index.js":"6","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GraphWidget\\index.js":"7","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberWidget\\index.js":"8","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Widget\\index.js":"9","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Progress\\index.js":"10","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberDisplay\\index.js":"11","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListItem\\index.js":"12","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListDisplay\\index.js":"13","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Loading\\index.js":"14","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\LoginButton\\index.js":"15","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\LogoutButton\\index.js":"16","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\pages\\GoalCreation\\index.js":"17","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\pages\\GoalUpdate\\index.js":"18","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GoalModal\\index.js":"19","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\utils\\UserContext.js":"20"},{"size":578,"mtime":1610940089559,"results":"21","hashOfConfig":"22"},{"size":2326,"mtime":1611023491377,"results":"23","hashOfConfig":"22"},{"size":2182,"mtime":1610763429744,"results":"24","hashOfConfig":"22"},{"size":2774,"mtime":1611018979664,"results":"25","hashOfConfig":"22"},{"size":1575,"mtime":1610160325642,"results":"26","hashOfConfig":"22"},{"size":1792,"mtime":1610922683508,"results":"27","hashOfConfig":"22"},{"size":2819,"mtime":1610160346207,"results":"28","hashOfConfig":"22"},{"size":1469,"mtime":1610160325660,"results":"29","hashOfConfig":"22"},{"size":1261,"mtime":1610160325667,"results":"30","hashOfConfig":"22"},{"size":791,"mtime":1610160325665,"results":"31","hashOfConfig":"22"},{"size":668,"mtime":1610160325657,"results":"32","hashOfConfig":"22"},{"size":624,"mtime":1610922683507,"results":"33","hashOfConfig":"22"},{"size":312,"mtime":1610160325645,"results":"34","hashOfConfig":"22"},{"size":1158,"mtime":1610160325652,"results":"35","hashOfConfig":"22"},{"size":258,"mtime":1610160346104,"results":"36","hashOfConfig":"22"},{"size":301,"mtime":1610160346105,"results":"37","hashOfConfig":"22"},{"size":5511,"mtime":1611022149565,"results":"38","hashOfConfig":"22"},{"size":3929,"mtime":1611022167108,"results":"39","hashOfConfig":"22"},{"size":731,"mtime":1610921059601,"results":"40","hashOfConfig":"22"},{"size":434,"mtime":1611023761214,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1d4p1wq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\index.js",[],["86","87"],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\App.js",["88","89"],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberWidgetContainer\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListWidgetContainer\\index.js",["90","91"],"import React, { Component, useState, useEffect } from 'react';\r\nimport ListWidget from '../ListWidget/index';\r\n\r\n// const ListWidgetContainer = props =>{\r\n//   const [info, setInfo] = useState({\r\n//     loading: true,\r\n//     values: []\r\n//   });\r\n\r\n//   const getData = ()=> {\r\n//     // Tell the Widget component we're currently loading\r\n//     setInfo({ loading: true });\r\n\r\n//     // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n//     const url = props.href;\r\n//     return fetch(url)\r\n//       .then(response => {\r\n//         console.log(response)\r\n//         response.json()\r\n//       })\r\n//       .then(res => {\r\n//         console.log(\"shit\")\r\n//         // Update state with data\r\n//         console.log(res)\r\n//         // setInfo({ loading: false, values: res.data });\r\n//       })\r\n//       .catch(error => {\r\n//         // At least tell the Widget component we have stopped loading\r\n//         console.log(error);\r\n//         setInfo({ loading: false });\r\n//       });\r\n//   }\r\n//   useEffect(()=>{\r\n//     getData().then(_ => {\r\n//       // Re-fetch every minute\r\n//       setInfo({...info, interval: setInterval(getData, 60000)})\r\n//     });\r\n//   }, []);\r\n\r\n\r\n//   return (\r\n//     // Render the list widget\r\n//     <ListWidget heading={props.heading} colspan={props.colspan} rowspan={props.rowspan} listItems={info.values} loading={info.loading} />\r\n//   );\r\n// }\r\n\r\nclass ListWidgetContainer extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n\r\n    this.state = {\r\n      loading: false,\r\n      values: []\r\n    }\r\n\r\n    // Bind function to refer to component\r\n    this.getData = this.getData.bind(this);\r\n  }\r\n\r\n  // Fetch data when the component is added\r\n  componentDidMount() {\r\n    this.getData().then(_ => {\r\n      // Re-fetch every minute\r\n      this.interval = setInterval(this.getData, 60000);\r\n    });\r\n  }\r\n\r\n  // Fetch new data\r\n  getData() {\r\n    // Tell the Widget component we're currently loading\r\n    this.setState({ loading: true });\r\n\r\n    // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    const url = this.props.href;\r\n    return fetch(url)\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        console.log(\"shit\")\r\n        // Update state with data\r\n        this.setState({ loading: false, values: res });\r\n      })\r\n      .catch(error => {\r\n        // At least tell the Widget component we have stopped loading\r\n        console.log(error);\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // Render the list widget\r\n      <ListWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} listItems={this.state.values} loading={this.state.loading} />\r\n    );\r\n  }\r\n}\r\nexport default ListWidgetContainer;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GraphWidgetContainer\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListWidget\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GraphWidget\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberWidget\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Widget\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Progress\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberDisplay\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListItem\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListDisplay\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Loading\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\LoginButton\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\LogoutButton\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\pages\\GoalCreation\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\pages\\GoalUpdate\\index.js",["92","93"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, FormGroup, Label, Input, Container, Row, Col, Button } from 'reactstrap';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport GoalModal from '../../components/GoalModal';\r\nimport './index.css';\r\n\r\nconst GoalUpdate = () => {\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [goalData, setGoalData] = useState();\r\n  const [updateData, setUpdateData] = useState({\r\n    progress: 0,\r\n    note: \"\"\r\n  });\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/goal/get/${id}`)\r\n      .then(res => res.json()).then(data => setGoalData(data))\r\n      .catch(err => console.log(err))\r\n  }, [id]);\r\n\r\n  const handleInputChange = (name, value) => {\r\n    setUpdateData({ ...updateData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = () =>{\r\n    fetch(`/api/goal/update/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updateData)\r\n    })\r\n      .then(res => {\r\n        console.log(res.status)\r\n        if(res.status == 200){\r\n          setShowModal(true)\r\n          setTimeout(()=>{\r\n            history.push('/')\r\n          }, 2000)\r\n        } else{\r\n          console.log(\"something went wrong with the update\")\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const backgroundColor = goalData ? goalData.color : 'lightGreen';\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n      {showModal &&\r\n          <Col sm={12}>\r\n            <GoalModal showModal={showModal} className={showModal ? \"show\" : \"hide\"} buttonLabel=\"X\" status=\"updated\" />\r\n          </Col>\r\n        }\r\n        <Col sm={12} md={9} lg={6} style={{ backgroundColor }}>\r\n          <Form>\r\n            {goalData &&\r\n              <h2>{goalData.title}</h2>\r\n            }\r\n            {goalData && goalData.image &&\r\n              <img src={goalData.image} alt=\"picture of goal\" />\r\n            }\r\n            {goalData &&\r\n              <>\r\n                <p>{goalData.description}</p>\r\n                <p>Originally created on : {goalData.date}</p>\r\n              </>\r\n            }\r\n            <FormGroup row>\r\n              <Label\r\n                for=\"progressInput\"\r\n                >\r\n                Progress</Label>\r\n              <Col sm={2}>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"progress\"\r\n                  id=\"progressInput\"\r\n                  placeholder=\"00\"\r\n                  value={updateData.progress}\r\n                  onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              {/* <Label\r\n                for=\"progressRange\">\r\n                Progress</Label> */}\r\n              <Input\r\n                type=\"range\"\r\n                name=\"progress\"\r\n                id=\"progressRange\"\r\n                value={updateData.progress}\r\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label\r\n                for=\"progressNote\"\r\n                >\r\n                Write a note about your progress here</Label>\r\n              <Col sm={10}>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"note\"\r\n                  id=\"progressNote\"\r\n                  onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup check row>\r\n              <Col sm={{ size: 10, offset: 2 }}>\r\n                <Button  onClick={()=> handleSubmit()}>Submit</Button>\r\n              </Col>\r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default GoalUpdate;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GoalModal\\index.js",["94","95","96"],"import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst GoalModal = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\r\n      <Modal isOpen={props.showModal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Goal Saved</ModalHeader>\r\n        <ModalBody>\r\n          YOUR GOAL HAS BEEN SUCCESSFULLY {props.status.toUpperCase()}\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoalModal;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\utils\\UserContext.js",["97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":20},{"ruleId":"103","severity":1,"message":"108","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"109","line":1,"column":38,"nodeType":"105","messageId":"106","endLine":1,"endColumn":47},{"ruleId":"110","severity":1,"message":"111","line":37,"column":23,"nodeType":"112","messageId":"113","endLine":37,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":65,"column":15,"nodeType":"116","endLine":65,"endColumn":65},{"ruleId":"103","severity":1,"message":"117","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"118","line":2,"column":49,"nodeType":"105","messageId":"106","endLine":2,"endColumn":60},{"ruleId":"103","severity":1,"message":"119","line":6,"column":5,"nodeType":"105","messageId":"106","endLine":6,"endColumn":16},{"ruleId":"103","severity":1,"message":"120","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":8,"column":3,"nodeType":"123","messageId":"113","endLine":8,"endColumn":6},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'LoginButton' is defined but never used.","Identifier","unusedVar","'LogoutButton' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Button' is defined but never used.","'ModalFooter' is defined but never used.","'buttonLabel' is assigned a value but never used.","'React' is defined but never used.","no-dupe-keys","Duplicate key '_id'.","ObjectExpression","no-global-assign","no-unsafe-negation"]