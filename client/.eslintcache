[{"/Users/brianford/Desktop/Goals-Tracker/client/src/index.js":"1","/Users/brianford/Desktop/Goals-Tracker/client/src/App.js":"2","/Users/brianford/Desktop/Goals-Tracker/client/src/components/NumberWidgetContainer/index.js":"3","/Users/brianford/Desktop/Goals-Tracker/client/src/utils/UserContext.js":"4","/Users/brianford/Desktop/Goals-Tracker/client/src/components/ListWidgetContainer/index.js":"5","/Users/brianford/Desktop/Goals-Tracker/client/src/components/LoginButton/index.js":"6","/Users/brianford/Desktop/Goals-Tracker/client/src/components/LogoutButton/index.js":"7","/Users/brianford/Desktop/Goals-Tracker/client/src/components/GraphWidgetContainer/index.js":"8","/Users/brianford/Desktop/Goals-Tracker/client/src/components/Profile/index.js":"9","/Users/brianford/Desktop/Goals-Tracker/client/src/pages/GoalUpdate/index.js":"10","/Users/brianford/Desktop/Goals-Tracker/client/src/pages/GoalCreation/index.js":"11","/Users/brianford/Desktop/Goals-Tracker/client/src/components/ListWidget/index.js":"12","/Users/brianford/Desktop/Goals-Tracker/client/src/components/GraphWidget/index.js":"13","/Users/brianford/Desktop/Goals-Tracker/client/src/components/NumberWidget/index.js":"14","/Users/brianford/Desktop/Goals-Tracker/client/src/components/GoalModal/index.js":"15","/Users/brianford/Desktop/Goals-Tracker/client/src/components/Widget/index.js":"16","/Users/brianford/Desktop/Goals-Tracker/client/src/components/NumberDisplay/index.js":"17","/Users/brianford/Desktop/Goals-Tracker/client/src/components/Progress/index.js":"18","/Users/brianford/Desktop/Goals-Tracker/client/src/components/ListItem/index.js":"19","/Users/brianford/Desktop/Goals-Tracker/client/src/components/ListDisplay/index.js":"20","/Users/brianford/Desktop/Goals-Tracker/client/src/components/Loading/index.js":"21"},{"size":555,"mtime":1610835645398,"results":"22","hashOfConfig":"23"},{"size":2693,"mtime":1611089584584,"results":"24","hashOfConfig":"23"},{"size":2115,"mtime":1609800416818,"results":"25","hashOfConfig":"23"},{"size":409,"mtime":1611053950100,"results":"26","hashOfConfig":"23"},{"size":1436,"mtime":1611054604657,"results":"27","hashOfConfig":"23"},{"size":249,"mtime":1609951039002,"results":"28","hashOfConfig":"23"},{"size":288,"mtime":1609951442019,"results":"29","hashOfConfig":"23"},{"size":1523,"mtime":1609800752689,"results":"30","hashOfConfig":"23"},{"size":1108,"mtime":1611079056557,"results":"31","hashOfConfig":"23"},{"size":3806,"mtime":1611053950100,"results":"32","hashOfConfig":"23"},{"size":5351,"mtime":1611053950100,"results":"33","hashOfConfig":"23"},{"size":1734,"mtime":1611053945083,"results":"34","hashOfConfig":"23"},{"size":2727,"mtime":1609813901372,"results":"35","hashOfConfig":"23"},{"size":1428,"mtime":1609801644684,"results":"36","hashOfConfig":"23"},{"size":705,"mtime":1611015313452,"results":"37","hashOfConfig":"23"},{"size":1218,"mtime":1609801699127,"results":"38","hashOfConfig":"23"},{"size":640,"mtime":1609801652007,"results":"39","hashOfConfig":"23"},{"size":761,"mtime":1609801270082,"results":"40","hashOfConfig":"23"},{"size":605,"mtime":1609801241388,"results":"41","hashOfConfig":"23"},{"size":297,"mtime":1609801137276,"results":"42","hashOfConfig":"23"},{"size":1137,"mtime":1609801663834,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"h9xgy2",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/brianford/Desktop/Goals-Tracker/client/src/index.js",[],["92","93"],"/Users/brianford/Desktop/Goals-Tracker/client/src/App.js",["94"],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/NumberWidgetContainer/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/utils/UserContext.js",["95","96"],"import React, { createContext } from 'react';\n\nconst GoalContext = createContext({\n  _id: '',\n  first: '',\n  last: '',\n  email: '',\n  _id: '',\n  goals: [{\n    _id: '',\n    title: '',\n    description: '',\n    date: '',\n    color: '',\n    popular: '',\n    highPriority: false,\n    goalUpdates: [{\n      _id: '',\n      updatedAt: '',\n      progress: 0,\n      note: ''\n    }]\n  }]\n});\n\nexport default GoalContext;","/Users/brianford/Desktop/Goals-Tracker/client/src/components/ListWidgetContainer/index.js",["97","98"],"import React, { Component, useState, useEffect } from 'react';\nimport ListWidget from '../ListWidget/index';\n\nclass ListWidgetContainer extends Component {\n  constructor() {\n    super();\n\n\n    this.state = {\n      loading: false,\n      values: []\n    }\n\n    // Bind function to refer to component\n    this.getData = this.getData.bind(this);\n  }\n\n  // Fetch data when the component is added\n  componentDidMount() {\n    this.getData().then(_ => {\n      // Re-fetch every minute\n      this.interval = setInterval(this.getData, 60000);\n    });\n  }\n\n  // Fetch new data\n  getData() {\n    // Tell the Widget component we're currently loading\n    this.setState({ loading: true });\n\n    // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = this.props.href;\n    return fetch(url)\n      .then(response => response.json())\n      .then(res => {\n        console.log(\"shit\")\n        // Update state with data\n        this.setState({ loading: false, values: res });\n      })\n      .catch(error => {\n        // At least tell the Widget component we have stopped loading\n        console.log(error);\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    return (\n      // Render the list widget\n      <ListWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} listItems={this.state.values} loading={this.state.loading} />\n    );\n  }\n}\nexport default ListWidgetContainer;","/Users/brianford/Desktop/Goals-Tracker/client/src/components/LoginButton/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/LogoutButton/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/GraphWidgetContainer/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/Profile/index.js",["99","100","101"],"import React, { useEffect, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Profile = () => {\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  const {userData, setUserData} = useState({\n    name: \"\",\n    email: \"\",\n    emailVerified: false\n  })\n\n  console.log(isAuthenticated)\n  console.log(user)\n\n  // useEffect(()=>{\n  //   // setUserData({\n  //   //   name: user.name,\n  //   //   email: user.email,\n  //   //   emailVerified: user.emailVerified\n  //   // })\n  //     fetch('/api/user/add', {\n  //       method: 'POST',\n  //       body: JSON.stringify(userData),\n  //       headers: { \n  //         \"Content-type\": \"application/json\"\n  //     } \n  //     })\n  //       .then(res => res.json())\n  //       .then(data => console.log(data))\n  //       .catch(err => console.log(err))\n  // }, [])\n\n\n\n\n  if (isLoading) {\n    return <div>Loading ...</div>;\n  }\n\n  return (\n    isAuthenticated && (\n      <div>\n        <img src={user.picture} alt={user.name} />\n        <h2>{user.name}</h2>\n        <p>{user.email}</p>\n      </div>\n    )\n  );\n};\n\nexport default Profile;","/Users/brianford/Desktop/Goals-Tracker/client/src/pages/GoalUpdate/index.js",["102","103"],"import React, { useState, useEffect } from 'react';\nimport { Form, FormGroup, Label, Input, Container, Row, Col, Button } from 'reactstrap';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport GoalModal from '../../components/GoalModal';\nimport './index.css';\n\nconst GoalUpdate = () => {\n  const [showModal, setShowModal] = useState(false)\n  const [goalData, setGoalData] = useState();\n  const [updateData, setUpdateData] = useState({\n    progress: 0,\n    note: \"\"\n  });\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch(`/api/goal/get/${id}`)\n      .then(res => res.json()).then(data => setGoalData(data))\n      .catch(err => console.log(err))\n  }, [id]);\n\n  const handleInputChange = (name, value) => {\n    setUpdateData({ ...updateData, [name]: value });\n  };\n\n  const handleSubmit = () =>{\n    fetch(`/api/goal/update/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updateData)\n    })\n      .then(res => {\n        console.log(res.status)\n        if(res.status == 200){\n          setShowModal(true)\n          setTimeout(()=>{\n            history.push('/')\n          }, 2000)\n        } else{\n          console.log(\"something went wrong with the update\")\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  const backgroundColor = goalData ? goalData.color : 'lightGreen';\n\n  return (\n    <Container>\n      <Row>\n      {showModal &&\n          <Col sm={12}>\n            <GoalModal showModal={showModal} className={showModal ? \"show\" : \"hide\"} buttonLabel=\"X\" status=\"updated\" />\n          </Col>\n        }\n        <Col sm={12} md={9} lg={6} style={{ backgroundColor }}>\n          <Form>\n            {goalData &&\n              <h2>{goalData.title}</h2>\n            }\n            {goalData && goalData.image &&\n              <img src={goalData.image} alt=\"picture of goal\" />\n            }\n            {goalData &&\n              <>\n                <p>{goalData.description}</p>\n                <p>Originally created on : {goalData.date}</p>\n              </>\n            }\n            <FormGroup row>\n              <Label\n                for=\"progressInput\"\n                >\n                Progress</Label>\n              <Col sm={2}>\n                <Input\n                  type=\"number\"\n                  name=\"progress\"\n                  id=\"progressInput\"\n                  placeholder=\"00\"\n                  value={updateData.progress}\n                  onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              {/* <Label\n                for=\"progressRange\">\n                Progress</Label> */}\n              <Input\n                type=\"range\"\n                name=\"progress\"\n                id=\"progressRange\"\n                value={updateData.progress}\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\n            </FormGroup>\n            <FormGroup row>\n              <Label\n                for=\"progressNote\"\n                >\n                Write a note about your progress here</Label>\n              <Col sm={10}>\n                <Input\n                  type=\"textarea\"\n                  name=\"note\"\n                  id=\"progressNote\"\n                  onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\n              </Col>\n            </FormGroup>\n            <FormGroup check row>\n              <Col sm={{ size: 10, offset: 2 }}>\n                <Button  onClick={()=> handleSubmit()}>Submit</Button>\n              </Col>\n            </FormGroup>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default GoalUpdate;","/Users/brianford/Desktop/Goals-Tracker/client/src/pages/GoalCreation/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/ListWidget/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/GraphWidget/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/NumberWidget/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/GoalModal/index.js",["104","105","106"],"import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst GoalModal = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\n      <Modal isOpen={props.showModal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Goal Saved</ModalHeader>\n        <ModalBody>\n          YOUR GOAL HAS BEEN SUCCESSFULLY {props.status.toUpperCase()}\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default GoalModal;","/Users/brianford/Desktop/Goals-Tracker/client/src/components/Widget/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/NumberDisplay/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/Progress/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/ListItem/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/ListDisplay/index.js",[],"/Users/brianford/Desktop/Goals-Tracker/client/src/components/Loading/index.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":31,"column":7,"nodeType":"113","endLine":31,"endColumn":13,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":8,"column":3,"nodeType":"121","messageId":"122","endLine":8,"endColumn":6},{"ruleId":"115","severity":1,"message":"123","line":1,"column":28,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"124","line":1,"column":38,"nodeType":"117","messageId":"118","endLine":1,"endColumn":47},{"ruleId":"115","severity":1,"message":"124","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"115","severity":1,"message":"125","line":6,"column":10,"nodeType":"117","messageId":"118","endLine":6,"endColumn":18},{"ruleId":"115","severity":1,"message":"126","line":6,"column":20,"nodeType":"117","messageId":"118","endLine":6,"endColumn":31},{"ruleId":"127","severity":1,"message":"128","line":37,"column":23,"nodeType":"129","messageId":"122","endLine":37,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":65,"column":15,"nodeType":"132","endLine":65,"endColumn":65},{"ruleId":"115","severity":1,"message":"133","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":16},{"ruleId":"115","severity":1,"message":"134","line":2,"column":49,"nodeType":"117","messageId":"118","endLine":2,"endColumn":60},{"ruleId":"115","severity":1,"message":"135","line":6,"column":5,"nodeType":"117","messageId":"118","endLine":6,"endColumn":16},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postData' and 'userData'. Either include them or remove the dependency array.","ArrayExpression",["138"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key '_id'.","ObjectExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Button' is defined but never used.","'ModalFooter' is defined but never used.","'buttonLabel' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [postData, user, userData]",{"range":"141","text":"142"},[1101,1107],"[postData, user, userData]"]