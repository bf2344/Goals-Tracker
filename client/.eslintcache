[{"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\index.js":"1","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\App.js":"2","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\utils\\UserContext.js":"3","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberWidgetContainer\\index.js":"4","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListWidgetContainer\\index.js":"5","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\LoginButton\\index.js":"6","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GraphWidgetContainer\\index.js":"7","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\LogoutButton\\index.js":"8","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\pages\\GoalCreation\\index.js":"9","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\pages\\GoalUpdate\\index.js":"10","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Profile\\index.js":"11","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListWidget\\index.js":"12","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberWidget\\index.js":"13","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GraphWidget\\index.js":"14","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GoalModal\\index.js":"15","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Widget\\index.js":"16","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Progress\\index.js":"17","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberDisplay\\index.js":"18","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListDisplay\\index.js":"19","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListItem\\index.js":"20","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Loading\\index.js":"21"},{"size":578,"mtime":1610940089559,"results":"22","hashOfConfig":"23"},{"size":3096,"mtime":1611793681272,"results":"24","hashOfConfig":"23"},{"size":434,"mtime":1611792136513,"results":"25","hashOfConfig":"23"},{"size":2182,"mtime":1610763429744,"results":"26","hashOfConfig":"23"},{"size":1621,"mtime":1611792136506,"results":"27","hashOfConfig":"23"},{"size":258,"mtime":1610160346104,"results":"28","hashOfConfig":"23"},{"size":1575,"mtime":1610160325642,"results":"29","hashOfConfig":"23"},{"size":301,"mtime":1610160346105,"results":"30","hashOfConfig":"23"},{"size":5521,"mtime":1611795346842,"results":"31","hashOfConfig":"23"},{"size":3929,"mtime":1611792136510,"results":"32","hashOfConfig":"23"},{"size":1164,"mtime":1611792136508,"results":"33","hashOfConfig":"23"},{"size":2523,"mtime":1611794958684,"results":"34","hashOfConfig":"23"},{"size":1469,"mtime":1610160325660,"results":"35","hashOfConfig":"23"},{"size":2819,"mtime":1610160346207,"results":"36","hashOfConfig":"23"},{"size":731,"mtime":1610921059601,"results":"37","hashOfConfig":"23"},{"size":1261,"mtime":1610160325667,"results":"38","hashOfConfig":"23"},{"size":791,"mtime":1610160325665,"results":"39","hashOfConfig":"23"},{"size":668,"mtime":1610160325657,"results":"40","hashOfConfig":"23"},{"size":312,"mtime":1610160325645,"results":"41","hashOfConfig":"23"},{"size":624,"mtime":1610922683507,"results":"42","hashOfConfig":"23"},{"size":1158,"mtime":1610160325652,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1d4p1wq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\index.js",[],["94","95"],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\App.js",["96"],"import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport NumberWidgetContainer from './components/NumberWidgetContainer/index';\r\nimport ListWidgetContainer from './components/ListWidgetContainer/index';\r\nimport GraphWidgetContainer from './components/GraphWidgetContainer';\r\nimport LoginButton from \"./components/LoginButton\"\r\nimport LogoutButton from \"./components/LogoutButton\"\r\nimport Profile from \"./components/Profile\"\r\nimport GoalCreation from './pages/GoalCreation';\r\nimport GoalUpdate from './pages/GoalUpdate';\r\nimport UserContext from './utils/UserContext';\r\nimport StarterListData from './utils/StarterListData.json';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [userData, setUserData] = useState();\r\n  const { user } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetch(`/api/user/${user.email}`)\r\n        .then(res => res.json())\r\n        .then(data => setUserData(data))\r\n        .then(() => {\r\n          if (!userData.length) {\r\n            console.log(\"fuck you\")\r\n            postData()\r\n          }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  }, [user]);\r\n\r\n  const postData = () => {\r\n    fetch('/api/user/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <UserContext.Provider value={userData}>\r\n        <Router>\r\n          <Route path='/goal-creation/:id'>\r\n            <GoalCreation />\r\n          </Route>\r\n          <Route path='/goal-update/:id'>\r\n            <GoalUpdate />\r\n          </Route>\r\n          <Route exact path='/'>\r\n            <div className=\"Home\">\r\n              <LoginButton />\r\n              <LogoutButton />\r\n              <Profile />\r\n                <ListWidgetContainer userGoals={userData ? userData.goals : StarterListData} heading=\"All Users Goals\" rowspan={3} />\r\n                {/* <ListWidgetContainer userGoals={userData ? userData.goals : starterListData} href=\"http://localhost:3001/api/stats/top\" heading=\"All Users Goals\" rowspan={3} /> */}\r\n              <NumberWidgetContainer href=\"http://localhost:3001/api/goals/open\" heading=\"Active Goals\" />\r\n              <GraphWidgetContainer href=\"http://localhost:3001/api/goals/progression\" heading=\"Goals Achieved Over Time\" colspan={2} rowspan={2} />\r\n              <NumberWidgetContainer href=\"http://localhost:3001/api/goals/today\" heading=\"Today's Goals\" />\r\n              <NumberWidgetContainer href=\"http://localhost:3001/api/goals/urgent\" heading=\"'Urgent' Goals\" />\r\n              <NumberWidgetContainer href=\"http://localhost:3001/api/goals/response\" heading=\"7 Day Goal Tracker\" />\r\n              <NumberWidgetContainer href=\"http://localhost:3001/api/goals/solved\" heading=\"1 Month Goal Tracker\" />\r\n            </div>\r\n\r\n          </Route>\r\n        </Router>\r\n      </UserContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\utils\\UserContext.js",["97","98"],"import React, { createContext } from 'react';\r\n\r\nconst GoalContext = createContext({\r\n  _id: '',\r\n  first: '',\r\n  last: '',\r\n  email: '',\r\n  _id: '',\r\n  goals: [{\r\n    _id: '',\r\n    title: '',\r\n    description: '',\r\n    date: '',\r\n    color: '',\r\n    popular: '',\r\n    highPriority: false,\r\n    goalUpdates: [{\r\n      _id: '',\r\n      updatedAt: '',\r\n      progress: 0,\r\n      note: ''\r\n    }]\r\n  }]\r\n});\r\n\r\nexport default GoalContext;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberWidgetContainer\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListWidgetContainer\\index.js",["99","100"],"import React, { Component, useState, useEffect } from 'react';\r\nimport ListWidget from '../ListWidget/index';\r\n\r\nclass ListWidgetContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      values: []\r\n    }\r\n\r\n    // Bind function to refer to component\r\n    // this.getData = this.getData.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({loading: false, values: nextProps.userGoals})\r\n  }\r\n\r\n  // Fetch data when the component is added\r\n  // componentDidMount() {\r\n  //   this.getData().then(_ => {\r\n  //     // Re-fetch every minute\r\n  //     this.interval = setInterval(this.getData, 60000);\r\n  //   });\r\n  // }\r\n\r\n  // // Fetch new data\r\n  // getData() {\r\n  //   // Tell the Widget component we're currently loading\r\n  //   this.setState({ loading: true });\r\n\r\n  //   const url = this.props.href;\r\n  //   return fetch(url)\r\n  //     .then(response => response.json())\r\n  //     .then(res => {\r\n  //       console.log(\"shit\")\r\n  //       // Update state with data\r\n  //       this.setState({ loading: false, values: res });\r\n  //     })\r\n  //     .catch(error => {\r\n  //       // At least tell the Widget component we have stopped loading\r\n  //       console.log(error);\r\n  //       this.setState({ loading: false });\r\n  //     });\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      // Render the list widget\r\n      <ListWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} listItems={this.state.values} loading={this.state.loading} />\r\n    );\r\n  }\r\n}\r\nexport default ListWidgetContainer;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\LoginButton\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GraphWidgetContainer\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\LogoutButton\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\pages\\GoalCreation\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\pages\\GoalUpdate\\index.js",["101","102"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, FormGroup, Label, Input, Container, Row, Col, Button } from 'reactstrap';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport GoalModal from '../../components/GoalModal';\r\nimport './index.css';\r\n\r\nconst GoalUpdate = () => {\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [goalData, setGoalData] = useState();\r\n  const [updateData, setUpdateData] = useState({\r\n    progress: 0,\r\n    note: \"\"\r\n  });\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/goal/get/${id}`)\r\n      .then(res => res.json()).then(data => setGoalData(data))\r\n      .catch(err => console.log(err))\r\n  }, [id]);\r\n\r\n  const handleInputChange = (name, value) => {\r\n    setUpdateData({ ...updateData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = () =>{\r\n    fetch(`/api/goal/update/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updateData)\r\n    })\r\n      .then(res => {\r\n        console.log(res.status)\r\n        if(res.status == 200){\r\n          setShowModal(true)\r\n          setTimeout(()=>{\r\n            history.push('/')\r\n          }, 2000)\r\n        } else{\r\n          console.log(\"something went wrong with the update\")\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const backgroundColor = goalData ? goalData.color : 'lightGreen';\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n      {showModal &&\r\n          <Col sm={12}>\r\n            <GoalModal showModal={showModal} className={showModal ? \"show\" : \"hide\"} buttonLabel=\"X\" status=\"updated\" />\r\n          </Col>\r\n        }\r\n        <Col sm={12} md={9} lg={6} style={{ backgroundColor }}>\r\n          <Form>\r\n            {goalData &&\r\n              <h2>{goalData.title}</h2>\r\n            }\r\n            {goalData && goalData.image &&\r\n              <img src={goalData.image} alt=\"picture of goal\" />\r\n            }\r\n            {goalData &&\r\n              <>\r\n                <p>{goalData.description}</p>\r\n                <p>Originally created on : {goalData.date}</p>\r\n              </>\r\n            }\r\n            <FormGroup row>\r\n              <Label\r\n                for=\"progressInput\"\r\n                >\r\n                Progress</Label>\r\n              <Col sm={2}>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"progress\"\r\n                  id=\"progressInput\"\r\n                  placeholder=\"00\"\r\n                  value={updateData.progress}\r\n                  onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              {/* <Label\r\n                for=\"progressRange\">\r\n                Progress</Label> */}\r\n              <Input\r\n                type=\"range\"\r\n                name=\"progress\"\r\n                id=\"progressRange\"\r\n                value={updateData.progress}\r\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label\r\n                for=\"progressNote\"\r\n                >\r\n                Write a note about your progress here</Label>\r\n              <Col sm={10}>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"note\"\r\n                  id=\"progressNote\"\r\n                  onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup check row>\r\n              <Col sm={{ size: 10, offset: 2 }}>\r\n                <Button  onClick={()=> handleSubmit()}>Submit</Button>\r\n              </Col>\r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default GoalUpdate;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Profile\\index.js",["103","104","105"],"import React, { useEffect, useState } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst Profile = () => {\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n  const {userData, setUserData} = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    emailVerified: false\r\n  })\r\n\r\n  // console.log(isAuthenticated)\r\n  // console.log(user)\r\n\r\n  // useEffect(()=>{\r\n  //   // setUserData({\r\n  //   //   name: user.name,\r\n  //   //   email: user.email,\r\n  //   //   emailVerified: user.emailVerified\r\n  //   // })\r\n  //     fetch('/api/user/add', {\r\n  //       method: 'POST',\r\n  //       body: JSON.stringify(userData),\r\n  //       headers: { \r\n  //         \"Content-type\": \"application/json\"\r\n  //     } \r\n  //     })\r\n  //       .then(res => res.json())\r\n  //       .then(data => console.log(data))\r\n  //       .catch(err => console.log(err))\r\n  // }, [])\r\n\r\n\r\n\r\n\r\n  if (isLoading) {\r\n    return <div>Loading ...</div>;\r\n  }\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <div>\r\n        <img src={user.picture} alt={user.name} />\r\n        <h2>{user.name}</h2>\r\n        <p>{user.email}</p>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Profile;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListWidget\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberWidget\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GraphWidget\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\GoalModal\\index.js",["106","107","108"],"import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst GoalModal = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\r\n      <Modal isOpen={props.showModal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Goal Saved</ModalHeader>\r\n        <ModalBody>\r\n          YOUR GOAL HAS BEEN SUCCESSFULLY {props.status.toUpperCase()}\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoalModal;","C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Widget\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Progress\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\NumberDisplay\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListDisplay\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\ListItem\\index.js",[],"C:\\Users\\Tyler Bolty\\Desktop\\personal-projects\\Goals-Tracker\\client\\src\\components\\Loading\\index.js",[],["109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":33,"column":6,"nodeType":"117","endLine":33,"endColumn":12,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":8,"column":3,"nodeType":"125","messageId":"126","endLine":8,"endColumn":6},{"ruleId":"119","severity":1,"message":"127","line":1,"column":28,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"128","line":1,"column":38,"nodeType":"121","messageId":"122","endLine":1,"endColumn":47},{"ruleId":"129","severity":1,"message":"130","line":37,"column":23,"nodeType":"131","messageId":"126","endLine":37,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":65,"column":15,"nodeType":"134","endLine":65,"endColumn":65},{"ruleId":"119","severity":1,"message":"128","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"135","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":18},{"ruleId":"119","severity":1,"message":"136","line":6,"column":20,"nodeType":"121","messageId":"122","endLine":6,"endColumn":31},{"ruleId":"119","severity":1,"message":"137","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":16},{"ruleId":"119","severity":1,"message":"138","line":2,"column":49,"nodeType":"121","messageId":"122","endLine":2,"endColumn":60},{"ruleId":"119","severity":1,"message":"139","line":6,"column":5,"nodeType":"121","messageId":"122","endLine":6,"endColumn":16},{"ruleId":"111","replacedBy":"140"},{"ruleId":"113","replacedBy":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postData' and 'userData.length'. Either include them or remove the dependency array.","ArrayExpression",["144"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key '_id'.","ObjectExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'Button' is defined but never used.","'ModalFooter' is defined but never used.","'buttonLabel' is assigned a value but never used.",["142"],["143"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [postData, user, userData.length]",{"range":"147","text":"148"},[1222,1228],"[postData, user, userData.length]"]