{"version":3,"sources":["components/Loading/index.js","components/Widget/index.js","components/NumberDisplay/index.js","components/Progress/index.js","components/NumberWidget/index.js","components/NumberWidgetContainer/index.js","components/ListDisplay/index.js","components/ListItem/index.js","components/ListWidget/index.js","components/ListWidgetContainer/index.js","components/GraphWidget/index.js","components/GraphWidgetContainer/index.js","App.js","index.js"],"names":["Loading","className","xmlns","viewBox","version","y","x","enableBackground","height","width","transform","Component","Widget","props","spanStyles","colspan","gridColumn","rowspan","gridRow","style","this","heading","loading","children","defaultProps","NumberDisplay","max","undefined","value","Progress","min","innerWidthStyle","NumberWidget","showProgress","showWidget","NumberWidgetContainer","state","getData","bind","then","_","interval","setInterval","setState","axios","get","href","response","newState","data","hasOwnProperty","catch","error","console","log","ListDisplay","ListItem","label","ListWidget","listItems","slice","sort","a","b","sortedItems","sortListItems","length","map","item","index","ListWidgetContainer","values","GraphWidget","labels","datasets","chartOptions","responsive","maintainAspectRatio","scaleShowGridLines","scales","xAxes","ticks","fontFamily","fontSize","fontColor","gridLines","display","yAxes","beginAtZero","legend","nextProps","generateDatasets","forEach","push","fill","tension","borderColor","color","borderWidth","pointRadius","pointHitRadius","options","GraphWidgetContainer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87a55cf9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            // Display a simple SVG image \r\n            <svg className=\"Loading\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 42 42\" version=\"1.1\" y=\"0px\" x=\"0px\" enableBackground=\"new 0 0 42 42\">\r\n                <rect height=\"10\" width=\"7\" y=\".5\" x=\"17.5\" />\r\n                <rect height=\"10\" width=\"7\" y=\"31.5\" x=\"17.5\" />\r\n                <rect transform=\"matrix(.707 .707 -.707 .707 16.4 -19.6)\" height=\"9.89\" width=\"6.38\" y=\"5.02\" x=\"28.6\" />\r\n                <rect transform=\"matrix(.707 .707 -.707 .707 25.4 2.26)\" height=\"9.89\" width=\"6.38\" y=\"26.8\" x=\"6.77\" />\r\n                <rect height=\"7\" width=\"10\" y=\"17.5\" x=\"31.5\" />\r\n                <rect height=\"7\" width=\"10\" y=\"17.5\" x=\".5\" />\r\n                <rect transform=\"matrix(-.707 .707 -.707 -.707 76.7 31.8)\" height=\"9.89\" width=\"6.38\" y=\"26.8\" x=\"28.6\" />\r\n                <rect transform=\"matrix(-.707 .707 -.707 -.707 24.1 9.96)\" height=\"9.89\" width=\"6.38\" y=\"5.02\" x=\"6.77\" />\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport Loading from '../Loading/index';\r\nimport './index.css';\r\n\r\nclass Widget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Create inline styles to make grid elements span multiple rows/columns\r\n        this.spanStyles = {};\r\n        if (props.colspan !== 1) {\r\n            this.spanStyles.gridColumn = `span ${props.colspan}`;\r\n        }\r\n        if (props.rowspan !== 1) {\r\n            this.spanStyles.gridRow = `span ${props.rowspan}`;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.spanStyles} className=\"Widget\">\r\n                <div className=\"header\">\r\n                    <h2>\r\n                        {this.props.heading}\r\n                    </h2>\r\n                    {/* Conditionally show the loading spinner */}\r\n                    {this.props.loading ? <Loading /> : \"\"}\r\n                </div>\r\n                <div className=\"content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Provide default settings for when they aren't supplied\r\nWidget.defaultProps = {\r\n    heading: \"Unnamed Widget\",\r\n    colspan: 1,\r\n    rowspan: 1\r\n}\r\n\r\nexport default Widget;","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nclass NumberDisplay extends Component {\r\n    render() {\r\n        // Only display \"of xx\" when a max prop is available\r\n        let max = null;\r\n\r\n        if (this.props.max !== undefined) {\r\n            max =\r\n                <span className=\"max\">\r\n                    of {this.props.max}\r\n                </span>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"NumberDisplay\">\r\n                <span className=\"value\">\r\n                    {this.props.value}\r\n                </span>\r\n\r\n                {max}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NumberDisplay;","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nclass Progress extends Component {\r\n    render() {\r\n        let value = this.props.value;\r\n\r\n        // Limit value to min and max bounds\r\n        if (value < this.props.min) {\r\n            value = 0;\r\n        } else if (value > this.props.max) {\r\n            value = this.props.max;\r\n        }\r\n\r\n        // Adjust progress bar using inline styles\r\n        let innerWidthStyle = { width: `${(value / this.props.max) * 100}%` };\r\n\r\n        return (\r\n            <div className=\"Progress\">\r\n                <div className=\"inner\" style={innerWidthStyle} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Provide a default value when one isn't supplied\r\nProgress.defaultProps = {\r\n    value: 0\r\n}\r\n\r\nexport default Progress;","import React, { Component } from 'react';\r\nimport Widget from '../Widget/index';\r\nimport NumberDisplay from '../NumberDisplay/index';\r\nimport Progress from '../Progress/index';\r\nimport './index.css';\r\n\r\nclass NumberWidget extends Component {\r\n    // Decide whether to show widget\r\n    showWidget() {\r\n        // Show loading indicator while initial data is being fetched\r\n        if (this.props.value === undefined) {\r\n            return <p>Loading...</p>;\r\n        }\r\n\r\n        return <div className=\"NumberWidget\">\r\n            <NumberDisplay max={this.props.max} value={this.props.value} />\r\n            {/* Conditionally show the progress bar */}\r\n            {this.showProgress()}\r\n        </div>\r\n    }\r\n\r\n    // Decide whether to show a progress bar\r\n    showProgress() {\r\n        // Only show if the required min, max and value props are supplied\r\n        if (this.props.min !== undefined && this.props.max !== undefined && this.props.value !== undefined) {\r\n            return <Progress min={this.props.min} max={this.props.max} value={this.props.value} />;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Wrap the number display component in the generic wrapper\r\n            <Widget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} loading={this.props.loading}>\r\n                {this.showWidget()}\r\n            </Widget>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberWidget;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport NumberWidget from '../NumberWidget';\r\n\r\nclass NumberWidgetContainer extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            loading: false,\r\n            min: undefined,\r\n            max: undefined,\r\n            value: undefined\r\n        }\r\n\r\n        // Bind function to refer to component\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    // Fetch data when the component is added\r\n    componentDidMount() {\r\n        this.getData().then(_ => {\r\n            // Re-fetch every minute\r\n            this.interval = setInterval(this.getData, 60000);\r\n        });\r\n    }\r\n\r\n    // Fetch new data\r\n    getData() {\r\n        // Tell the Widget component we're currently loading\r\n        this.setState({ loading: true });\r\n\r\n        // Fetch data\r\n        return axios.get(this.props.href)\r\n            .then(response => {\r\n                // Build a new state\r\n                let newState = { loading: false };\r\n\r\n                // Populate state with new data\r\n                if (response.data.hasOwnProperty(\"min\")) {\r\n                    newState[\"min\"] = response.data.min;\r\n                }\r\n                if (response.data.hasOwnProperty(\"max\")) {\r\n                    newState[\"max\"] = response.data.max;\r\n                }\r\n                if (response.data.hasOwnProperty(\"value\")) {\r\n                    newState[\"value\"] = response.data.value;\r\n                }\r\n\r\n                // Update state with data\r\n                this.setState(newState);\r\n            })\r\n            .catch(error => {\r\n                // At least tell the Widget component we have stopped loading\r\n                console.log(error);\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Render the number widget\r\n            <NumberWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} min={this.state.min} max={this.state.max} value={this.state.value} loading={this.state.loading} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberWidgetContainer;","import React, { Component } from 'react';\r\n\r\n// Import styling\r\nimport './index.css';\r\n\r\nclass ListDisplay extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"ListDisplay\">\r\n                {this.props.children}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListDisplay;","import React, { Component } from 'react';\r\nimport Progress from '../Progress';\r\nimport './index.css';\r\n\r\nclass ListItem extends Component {\r\n    render() {\r\n        return (\r\n            <li className=\"ListItem\">\r\n                <div className=\"value\">{this.props.value}</div>\r\n                <div className=\"label\">\r\n                    {this.props.label}\r\n                    {/* Compare progress against others in the list */}\r\n                    <Progress min={this.props.min} max={this.props.max} value={this.props.value} />\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListItem;","import React, { Component } from 'react';\r\n\r\n// Import components\r\nimport Widget from '../Widget';\r\nimport ListDisplay from '../ListDisplay';\r\nimport ListItem from '../ListItem';\r\n\r\n// Import styling\r\nimport './index.css';\r\n\r\nclass ListWidget extends Component {\r\n    //Sort items in descending order\r\n    sortListItems() {\r\n        let sortedItems = this.props.listItems.slice();\r\n        return sortedItems.sort((a, b) => {\r\n            if (a.value > b.value) {\r\n                return -1;\r\n            } else if (a.value < b.value) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    // Decide whether to show widget\r\n    showWidget() {\r\n        let sortedItems = this.sortListItems();\r\n\r\n        // Show loading indicator while initial data is being fetched\r\n        if (this.props.listItems.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        // Get min/max values for progress bar\r\n        let min = 0;\r\n        let max = sortedItems[0].value;\r\n\r\n        return (\r\n            <ListDisplay>\r\n                {/* Add a ListItem for each piece of data */}\r\n                {sortedItems.map((item, index) => <ListItem key={item.label} label={item.label} value={item.value} min={min} max={max} />)}\r\n            </ListDisplay>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Wrap the list display component in the generic wrapper\r\n            <Widget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} loading={this.props.loading} >\r\n                <div className=\"ListWidget\">\r\n                    {/* Conditionally show the widget */}\r\n                    {this.showWidget()}\r\n                </div>\r\n            </Widget>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListWidget;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ListWidget from '../ListWidget/index';\r\n\r\nclass ListWidgetContainer extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        \r\n        this.state = {\r\n            loading: false,\r\n            values: []\r\n        }\r\n\r\n        // Bind function to refer to component\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    // Fetch data when the component is added\r\n    componentDidMount() {\r\n        this.getData().then(_ => {\r\n            // Re-fetch every minute\r\n            this.interval = setInterval(this.getData, 60000);\r\n        });\r\n    }\r\n\r\n    // Fetch new data\r\n    getData() {\r\n        // Tell the Widget component we're currently loading\r\n        this.setState({ loading: true });\r\n\r\n        return axios.get(this.props.href)\r\n            .then(response => {\r\n                // Update state with data\r\n                this.setState({ loading: false, values: response.data });\r\n            })\r\n            .catch(error => {\r\n                // At least tell the Widget component we have stopped loading\r\n                console.log(error);\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Render the list widget\r\n            <ListWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} listItems={this.state.values} loading={this.state.loading} />\r\n        );\r\n    }\r\n}\r\nexport default ListWidgetContainer;","import React, { Component } from 'react';\r\nimport Widget from '../Widget/index';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './index.css';\r\n\r\nclass GraphWidget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values: {\r\n                labels: [\"???\", \"???\", \"???\", \"???\", \"???\", \"???\", \"???\"],\r\n                datasets: []\r\n            },\r\n            chartOptions: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                scaleShowGridLines: false,\r\n                scales: {\r\n                    xAxes: [{\r\n                        ticks: {\r\n                            fontFamily: \"'Didact Gothic', sans-serif\",\r\n                            fontSize: 18,\r\n                            fontColor: \"#ecf0f1\",\r\n                        },\r\n                        gridLines: {\r\n                            display: true\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            fontFamily: \"'Didact Gothic', sans-serif\",\r\n                            fontSize: 18,\r\n                            fontColor: \"#ecf0f1\",\r\n                        },\r\n                        gridLines: {\r\n                            display: true\r\n                        }\r\n                    }],\r\n                },\r\n                legend: {\r\n                    display: false\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Update the state based on changing props\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.data !== nextProps.data) {\r\n            this.generateDatasets(nextProps);\r\n        }\r\n    }\r\n\r\n    //Convert the data received in props to a format the graphing component likes\r\n    generateDatasets(props) {\r\n        let datasets = [];\r\n\r\n        //Create a dataset object that Chart.js to understand\r\n        props.data.forEach(function (data) {\r\n            datasets.push({\r\n                label: data.label,\r\n                data: data.data,\r\n                fill: false,\r\n                tension: 0,\r\n                borderColor: data.color,\r\n                borderWidth: 8,\r\n                pointRadius: 0,\r\n                pointHitRadius: 10\r\n            });\r\n        }, this);\r\n\r\n        //Let the React wrapper for Chart.js update the view\r\n        this.setState({\r\n            values: {\r\n                datasets\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Wrap the graphing component in the generic wrapper\r\n            <Widget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} loading={this.props.loading}>\r\n                <div className=\"GraphWidget\">\r\n                    <Line data={this.state.values} options={this.state.chartOptions} />\r\n                </div>\r\n            </Widget>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GraphWidget;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport GraphWidget from '../GraphWidget/index';\r\n\r\nclass GraphWidgetContainer extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        // Set initial state\r\n        this.state = {\r\n            loading: false,\r\n            values: []\r\n        }\r\n\r\n        // Bind function to refer to component\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    // Fetch data when the component is added\r\n    componentDidMount() {\r\n        this.getData().then(_ => {\r\n            // Re-fetch every minute\r\n            this.interval = setInterval(this.getData, 60000);\r\n        });\r\n    }\r\n\r\n    // Fetch new data\r\n    getData() {\r\n        // Tell the Widget component we're currently loading\r\n        this.setState({ loading: true });\r\n\r\n        // Fetch data\r\n        return axios.get(this.props.href)\r\n            .then(response => {\r\n                // Update state with data\r\n                this.setState({ loading: false, data: response.data });\r\n            })\r\n            .catch(error => {\r\n                // At least tell the Widget component we have stopped loading\r\n                console.log(error);\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Render the graph widget\r\n            <GraphWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} data={this.state.data} loading={this.state.loading} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default GraphWidgetContainer;","import React, { Component } from 'react';\r\nimport NumberWidgetContainer from './components/NumberWidgetContainer/index';\r\nimport ListWidgetContainer from './components/ListWidgetContainer/index';\r\nimport GraphWidgetContainer from './components/GraphWidgetContainer/';\r\n\r\n// Add in styles\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <ListWidgetContainer href=\"http://localhost:3001/api/stats/top\" heading=\"All Users Goals\" rowspan={3} />\r\n                <NumberWidgetContainer href=\"http://localhost:3001/api/tickets/open\" heading=\"Active Goals\" />\r\n                <GraphWidgetContainer href=\"http://localhost:3001/api/tickets/progression\" heading=\"Goals Achieved Over Time\" colspan={2} rowspan={2} />\r\n                <NumberWidgetContainer href=\"http://localhost:3001/api/tickets/today\" heading=\"Today's Goals\" />\r\n                <NumberWidgetContainer href=\"http://localhost:3001/api/tickets/urgent\" heading=\"'Urgent' Goals\" />\r\n                <NumberWidgetContainer href=\"http://localhost:3001/api/stats/response\" heading=\"7 Day Goal Tracker\" />\r\n                <NumberWidgetContainer href=\"http://localhost:3001/api/stats/solved\" heading=\"1 Month Goal Tracker\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}