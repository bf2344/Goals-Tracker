{"version":3,"sources":["components/Loading/index.js","components/Widget/index.js","components/NumberDisplay/index.js","components/Progress/index.js","components/NumberWidget/index.js","components/NumberWidgetContainer/index.js","components/ListDisplay/index.js","components/ListItem/index.js","components/ListWidget/index.js","components/ListWidgetContainer/index.js","components/GraphWidget/index.js","components/GraphWidgetContainer/index.js","components/Modal/index.js","pages/GoalCreation/index.js","pages/GoalUpdate/index.js","App.js","index.js"],"names":["Loading","className","xmlns","viewBox","version","y","x","enableBackground","height","width","transform","Component","Widget","props","spanStyles","colspan","gridColumn","rowspan","gridRow","style","this","heading","loading","children","defaultProps","NumberDisplay","max","undefined","value","Progress","min","innerWidthStyle","NumberWidget","showProgress","showWidget","NumberWidgetContainer","state","getData","bind","then","_","interval","setInterval","setState","axios","get","href","response","newState","data","hasOwnProperty","catch","error","console","log","ListDisplay","ListItem","label","ListWidget","listItems","slice","sort","a","b","sortedItems","sortListItems","length","map","item","index","ListWidgetContainer","values","GraphWidget","labels","datasets","chartOptions","responsive","maintainAspectRatio","scaleShowGridLines","scales","xAxes","ticks","fontFamily","fontSize","fontColor","gridLines","display","yAxes","beginAtZero","legend","nextProps","generateDatasets","forEach","push","fill","tension","borderColor","color","borderWidth","pointRadius","pointHitRadius","options","GraphWidgetContainer","GoalCreationModal","buttonLabel","useState","modal","setModal","toggle","Modal","isOpen","showModal","ModalHeader","ModalBody","GoalCreation","title","description","date","Date","popular","upload","checked","goalUpdates","inputValues","setInputValues","setShowModal","history","useHistory","handleInputChange","name","handlePopularClick","Container","Row","Col","sm","md","lg","Form","FormGroup","Label","for","Input","type","id","placeholder","onChange","e","currentTarget","onSelect","onClick","FormText","check","Button","fetch","method","body","res","setTimeout","GoalUpdate","goalData","setGoalData","progress","note","updateData","setUpdateData","useParams","useEffect","json","err","backgroundColor","onSubmit","preventDefault","headers","JSON","stringify","handleSubmit","image","src","alt","row","size","offset","App","path","exact","ReactDOM","render","domain","clientId","redirectUri","window","location","origin","document","getElementById"],"mappings":"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","file":"static/js/main.267ff3ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './index.css';\n\nclass Loading extends Component {\n    render() {\n        return (\n            // Display a simple SVG image \n            <svg className=\"Loading\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 42 42\" version=\"1.1\" y=\"0px\" x=\"0px\" enableBackground=\"new 0 0 42 42\">\n                <rect height=\"10\" width=\"7\" y=\".5\" x=\"17.5\" />\n                <rect height=\"10\" width=\"7\" y=\"31.5\" x=\"17.5\" />\n                <rect transform=\"matrix(.707 .707 -.707 .707 16.4 -19.6)\" height=\"9.89\" width=\"6.38\" y=\"5.02\" x=\"28.6\" />\n                <rect transform=\"matrix(.707 .707 -.707 .707 25.4 2.26)\" height=\"9.89\" width=\"6.38\" y=\"26.8\" x=\"6.77\" />\n                <rect height=\"7\" width=\"10\" y=\"17.5\" x=\"31.5\" />\n                <rect height=\"7\" width=\"10\" y=\"17.5\" x=\".5\" />\n                <rect transform=\"matrix(-.707 .707 -.707 -.707 76.7 31.8)\" height=\"9.89\" width=\"6.38\" y=\"26.8\" x=\"28.6\" />\n                <rect transform=\"matrix(-.707 .707 -.707 -.707 24.1 9.96)\" height=\"9.89\" width=\"6.38\" y=\"5.02\" x=\"6.77\" />\n            </svg>\n        );\n    }\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport Loading from '../Loading/index';\nimport './index.css';\n\nclass Widget extends Component {\n    constructor(props) {\n        super(props);\n\n        // Create inline styles to make grid elements span multiple rows/columns\n        this.spanStyles = {};\n        if (props.colspan !== 1) {\n            this.spanStyles.gridColumn = `span ${props.colspan}`;\n        }\n        if (props.rowspan !== 1) {\n            this.spanStyles.gridRow = `span ${props.rowspan}`;\n        }\n    }\n\n    render() {\n        return (\n            <div style={this.spanStyles} className=\"Widget\">\n                <div className=\"header\">\n                    <h2>\n                        {this.props.heading}\n                    </h2>\n                    {/* Conditionally show the loading spinner */}\n                    {this.props.loading ? <Loading /> : \"\"}\n                </div>\n                <div className=\"content\">\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\n// Provide default settings for when they aren't supplied\nWidget.defaultProps = {\n    heading: \"Unnamed Widget\",\n    colspan: 1,\n    rowspan: 1\n}\n\nexport default Widget;","import React, { Component } from 'react';\nimport './index.css';\n\nclass NumberDisplay extends Component {\n    render() {\n        // Only display \"of xx\" when a max prop is available\n        let max = null;\n\n        if (this.props.max !== undefined) {\n            max =\n                <span className=\"max\">\n                    of {this.props.max}\n                </span>;\n        }\n\n        return (\n            <div className=\"NumberDisplay\">\n                <span className=\"value\">\n                    {this.props.value}\n                </span>\n\n                {max}\n            </div>\n        );\n    }\n}\n\n\nexport default NumberDisplay;","import React, { Component } from 'react';\nimport './index.css';\n\nclass Progress extends Component {\n    render() {\n        let value = this.props.value;\n\n        // Limit value to min and max bounds\n        if (value < this.props.min) {\n            value = 0;\n        } else if (value > this.props.max) {\n            value = this.props.max;\n        }\n\n        // Adjust progress bar using inline styles\n        let innerWidthStyle = { width: `${(value / this.props.max) * 100}%` };\n\n        return (\n            <div className=\"Progress\">\n                <div className=\"inner\" style={innerWidthStyle} />\n            </div>\n        );\n    }\n}\n\n// Provide a default value when one isn't supplied\nProgress.defaultProps = {\n    value: 0\n}\n\nexport default Progress;","import React, { Component } from 'react';\nimport Widget from '../Widget/index';\nimport NumberDisplay from '../NumberDisplay/index';\nimport Progress from '../Progress/index';\nimport './index.css';\n\nclass NumberWidget extends Component {\n    // Decide whether to show widget\n    showWidget() {\n        // Show loading indicator while initial data is being fetched\n        if (this.props.value === undefined) {\n            return <p>Loading...</p>;\n        }\n\n        return <div className=\"NumberWidget\">\n            <NumberDisplay max={this.props.max} value={this.props.value} />\n            {/* Conditionally show the progress bar */}\n            {this.showProgress()}\n        </div>\n    }\n\n    // Decide whether to show a progress bar\n    showProgress() {\n        // Only show if the required min, max and value props are supplied\n        if (this.props.min !== undefined && this.props.max !== undefined && this.props.value !== undefined) {\n            return <Progress min={this.props.min} max={this.props.max} value={this.props.value} />;\n        }\n\n        return null;\n    }\n\n    render() {\n        return (\n            // Wrap the number display component in the generic wrapper\n            <Widget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} loading={this.props.loading}>\n                {this.showWidget()}\n            </Widget>\n        );\n    }\n}\n\nexport default NumberWidget;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport NumberWidget from '../NumberWidget';\n\nclass NumberWidgetContainer extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            loading: false,\n            min: undefined,\n            max: undefined,\n            value: undefined\n        }\n\n        // Bind function to refer to component\n        this.getData = this.getData.bind(this);\n    }\n\n    // Fetch data when the component is added\n    componentDidMount() {\n        this.getData().then(_ => {\n            // Re-fetch every minute\n            this.interval = setInterval(this.getData, 60000);\n        });\n    }\n\n    // Fetch new data\n    getData() {\n        // Tell the Widget component we're currently loading\n        this.setState({ loading: true });\n\n        // Fetch data\n        return axios.get(this.props.href)\n            .then(response => {\n                // Build a new state\n                let newState = { loading: false };\n\n                // Populate state with new data\n                if (response.data.hasOwnProperty(\"min\")) {\n                    newState[\"min\"] = response.data.min;\n                }\n                if (response.data.hasOwnProperty(\"max\")) {\n                    newState[\"max\"] = response.data.max;\n                }\n                if (response.data.hasOwnProperty(\"value\")) {\n                    newState[\"value\"] = response.data.value;\n                }\n\n                // Update state with data\n                this.setState(newState);\n            })\n            .catch(error => {\n                // At least tell the Widget component we have stopped loading\n                console.log(error);\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        return (\n            // Render the number widget\n            <NumberWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} min={this.state.min} max={this.state.max} value={this.state.value} loading={this.state.loading} />\n        );\n    }\n}\n\nexport default NumberWidgetContainer;","import React, { Component } from 'react';\n\n// Import styling\nimport './index.css';\n\nclass ListDisplay extends Component {\n    render() {\n        return (\n            <ul className=\"ListDisplay\">\n                {this.props.children}\n            </ul>\n        )\n    }\n}\n\nexport default ListDisplay;","import React, { Component } from 'react';\nimport Progress from '../Progress';\nimport './index.css';\n\nclass ListItem extends Component {\n    render() {\n        return (\n            <li className=\"ListItem\">\n                <div className=\"value\">{this.props.value}</div>\n                <div className=\"label\">\n                    {this.props.label}\n                    {/* Compare progress against others in the list */}\n                    <Progress min={this.props.min} max={this.props.max} value={this.props.value} />\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default ListItem;","import React, { Component } from 'react';\n\n// Import components\nimport Widget from '../Widget';\nimport ListDisplay from '../ListDisplay';\nimport ListItem from '../ListItem';\n\n// Import styling\nimport './index.css';\n\nclass ListWidget extends Component {\n    //Sort items in descending order\n    sortListItems() {\n        let sortedItems = this.props.listItems.slice();\n        return sortedItems.sort((a, b) => {\n            if (a.value > b.value) {\n                return -1;\n            } else if (a.value < b.value) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n\n    // Decide whether to show widget\n    showWidget() {\n        let sortedItems = this.sortListItems();\n\n        // Show loading indicator while initial data is being fetched\n        if (this.props.listItems.length === 0) {\n            return null;\n        }\n\n        // Get min/max values for progress bar\n        let min = 0;\n        let max = sortedItems[0].value;\n\n        return (\n            <ListDisplay>\n                {/* Add a ListItem for each piece of data */}\n                {sortedItems.map((item, index) => <ListItem key={item.label} label={item.label} value={item.value} min={min} max={max} />)}\n            </ListDisplay>\n        );\n    }\n\n    render() {\n        return (\n            // Wrap the list display component in the generic wrapper\n            <Widget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} loading={this.props.loading} >\n                <div className=\"ListWidget\">\n                    {/* Conditionally show the widget */}\n                    {this.showWidget()}\n                </div>\n            </Widget>\n        );\n    }\n}\n\nexport default ListWidget;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport ListWidget from '../ListWidget/index';\n\nclass ListWidgetContainer extends Component {\n    constructor() {\n        super();\n\n        \n        this.state = {\n            loading: false,\n            values: []\n        }\n\n        // Bind function to refer to component\n        this.getData = this.getData.bind(this);\n    }\n\n    // Fetch data when the component is added\n    componentDidMount() {\n        this.getData().then(_ => {\n            // Re-fetch every minute\n            this.interval = setInterval(this.getData, 60000);\n        });\n    }\n\n    // Fetch new data\n    getData() {\n        // Tell the Widget component we're currently loading\n        this.setState({ loading: true });\n\n        return axios.get(this.props.href)\n            .then(response => {\n                // Update state with data\n                this.setState({ loading: false, values: response.data });\n            })\n            .catch(error => {\n                // At least tell the Widget component we have stopped loading\n                console.log(error);\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        return (\n            // Render the list widget\n            <ListWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} listItems={this.state.values} loading={this.state.loading} />\n        );\n    }\n}\nexport default ListWidgetContainer;","import React, { Component } from 'react';\nimport Widget from '../Widget/index';\nimport { Line } from 'react-chartjs-2';\nimport './index.css';\n\nclass GraphWidget extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: {\n                labels: [\"???\", \"???\", \"???\", \"???\", \"???\", \"???\", \"???\"],\n                datasets: []\n            },\n            chartOptions: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scaleShowGridLines: false,\n                scales: {\n                    xAxes: [{\n                        ticks: {\n                            fontFamily: \"'Didact Gothic', sans-serif\",\n                            fontSize: 18,\n                            fontColor: \"#ecf0f1\",\n                        },\n                        gridLines: {\n                            display: true\n                        }\n                    }],\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true,\n                            fontFamily: \"'Didact Gothic', sans-serif\",\n                            fontSize: 18,\n                            fontColor: \"#ecf0f1\",\n                        },\n                        gridLines: {\n                            display: true\n                        }\n                    }],\n                },\n                legend: {\n                    display: false\n                }\n            }\n        }\n    }\n\n    // Update the state based on changing props\n    componentWillReceiveProps(nextProps) {\n        if (this.props.data !== nextProps.data) {\n            this.generateDatasets(nextProps);\n        }\n    }\n\n   \n    generateDatasets(props) {\n        let datasets = [];\n\n       \n        props.data.forEach(function (data) {\n            datasets.push({\n                label: data.label,\n                data: data.data,\n                fill: false,\n                tension: 0,\n                borderColor: data.color,\n                borderWidth: 8,\n                pointRadius: 0,\n                pointHitRadius: 10\n            });\n        }, this);\n\n       \n        this.setState({\n            values: {\n                datasets\n            }\n        });\n    }\n\n    render() {\n        return (\n            // Wrap the graphing component in the generic wrapper\n            <Widget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} loading={this.props.loading}>\n                <div className=\"GraphWidget\">\n                    <Line data={this.state.values} options={this.state.chartOptions} />\n                </div>\n            </Widget>\n        );\n    }\n}\n\nexport default GraphWidget;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport GraphWidget from '../GraphWidget/index';\n\nclass GraphWidgetContainer extends Component {\n    constructor() {\n        super();\n\n        // Set initial state\n        this.state = {\n            loading: false,\n            values: []\n        }\n\n        // Bind function to refer to component\n        this.getData = this.getData.bind(this);\n    }\n\n    // Fetch data when the component is added\n    componentDidMount() {\n        this.getData().then(_ => {\n            // Re-fetch every minute\n            this.interval = setInterval(this.getData, 60000);\n        });\n    }\n\n    // Fetch new data\n    getData() {\n        // Tell the Widget component we're currently loading\n        this.setState({ loading: true });\n\n        // Fetch data\n        return axios.get(this.props.href)\n            .then(response => {\n                // Update state with data\n                this.setState({ loading: false, data: response.data });\n            })\n            .catch(error => {\n                // At least tell the Widget component we have stopped loading\n                console.log(error);\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        return (\n            // Render the graph widget\n            <GraphWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} data={this.state.data} loading={this.state.loading} />\n        );\n    }\n}\n\nexport default GraphWidgetContainer;","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst GoalCreationModal = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\n      <Modal isOpen={props.showModal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Goal Saved</ModalHeader>\n        <ModalBody>\n          YOUR GOAL HAS BEEN SUCCESSFULLY SAVED\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default GoalCreationModal;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input, FormText, Container, Row, Col, Button } from 'reactstrap';\nimport './index.css';\nimport GoalCreationModal from '../../components/Modal';\n\nconst GoalCreation = () => {\n  const [inputValues, setInputValues] = useState({\n    title: '',\n    description: '',\n    date: () => new Date(),\n    color: '',\n    popular: '',\n    upload: '',\n    checked: false,\n    goalUpdates: []\n  })\n  \n  const [showModal, setShowModal] = useState(false)\n  const history = useHistory()\n\n  const handleGoalSubmit = () => {\n    fetch('/api/user/goal/add', {\n      method: 'POST',\n      body: {\n        ...inputValues,\n        // userEmail: user.email\n      }\n    }).then(res => {\n      setShowModal(true)\n      setTimeout(() => {\n        history.push('/')\n      }, 2000);\n    })\n  }\n\n  const handleInputChange = (name, value) => {\n    setInputValues({ ...inputValues, [name]: value })\n  }\n\n  const handlePopularClick = value => {\n    setInputValues({ ...inputValues, popular: value })\n  }\n\n  return (\n    <Container>\n      <Row>\n        {showModal &&\n          <Col sm={12}>\n            <GoalCreationModal showModal={showModal} className={showModal ? \"show\" : \"hide\"} buttonLabel=\"X\" />\n          </Col>\n        }\n        <Col sm={12} md={9} lg={6} className='form-column'>\n          <Form>\n            <FormGroup>\n              <Label for=\"exampleName\">Goal Name</Label>\n              <Input\n                type=\"name\"\n                name=\"title\"\n                id=\"exampleEmail\"\n                placeholder=\"with a placeholder\"\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleText\">Goal Description</Label>\n              <Input\n                type=\"textarea\"\n                name=\"description\"\n                id=\"exampleText\"\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleDate\">Goal End Date</Label>\n              <Input\n                type=\"date\"\n                name=\"date\"\n                id=\"exampleDate\"\n                placeholder=\"date placeholder\"\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleColor\">Color Code This Goal</Label>\n              <Input\n                type=\"color\"\n                name=\"color\"\n                id=\"exampleColor\"\n                placeholder=\"color placeholder\"\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleSelect\">Does your goal fall under one of these categories?</Label>\n              <Input type=\"select\" onChange={(e) => handlePopularClick(e.currentTarget.value)} name=\"select\" id=\"exampleSelect\">\n                <option\n                  name='financial'\n                  onSelect={() => handlePopularClick()}>\n                  Financial</option>\n                <option\n                  name='healthFitness'\n                  onClick={() => handlePopularClick()}>\n                  Health/Fitness</option>\n                <option\n                  name='personalWellbeing'\n                  onClick={() => handlePopularClick()}>\n                  Personal Wellbeing</option>\n                <option\n                  name='professionalAchievement'\n                  onClick={() => handlePopularClick()}>\n                  Professional Achievement</option>\n                <option\n                  name='personalAchievement'\n                  onClick={() => handlePopularClick()}>\n                  Personal Achievement</option>\n                <option\n                  name='habit'\n                  onClick={() => handlePopularClick()}>\n                  Build/Break A Habit</option>\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleFile\">Upload</Label>\n              <Input\n                type=\"file\"\n                name='file'\n                id=\"exampleFile\" />\n              <FormText\n                color=\"muted\">\n                Upload an image of your goal here\n              </FormText>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <Input\n                  type=\"checkbox\"\n                  onClick={() => setInputValues({ ...inputValues, checked: !inputValues.checked })} /> A Check Box\n              </Label>\n            </FormGroup>\n            <Button onClick={() => handleGoalSubmit()}>Submit</Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default GoalCreation;","import React, { useState, useEffect } from 'react';\nimport { Form, FormGroup, Label, Input, Container, Row, Col, Button } from 'reactstrap';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport './index.css';\n\nconst GoalUpdate = () => {\n  const [goalData, setGoalData] = useState();\n  const [updateData, setUpdateData] = useState({\n    progress: 0,\n    note: \"\"\n  });\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch(`/api/user/goal/get/${id}`)\n      .then(res => res.json()).then(data => setGoalData(data))\n      .catch(err => console.log(err))\n  }, []);\n\n  const handleInputChange = (name, value) => {\n    setUpdateData({ ...updateData, [name]: value });\n  };\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    fetch(`/api/user/goal/update/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updateData)\n    })\n      .then(res => {\n        setTimeout(()=>{\n          history.push('/')\n        }, 2000)\n      })\n      .catch(err => console.log(err));\n  };\n\n  const backgroundColor = goalData ? goalData.color : 'lightGreen';\n\n  return (\n    <Container>\n      <Row>\n        <Col sm={12} md={9} lg={6} style={{ backgroundColor }}>\n          <Form onSubmit={(e)=> handleSubmit(e.currentTarget)}>\n            {goalData &&\n              <h2>{goalData.title}</h2>\n            }\n            {goalData && goalData.image &&\n              <img src={goalData.image} alt=\"picture of goal\" />\n            }\n            {goalData &&\n              <>\n                <p>{goalData.description}</p>\n                <p>Originally created on : {goalData.date}</p>\n              </>\n            }\n            <FormGroup row>\n              <Label\n                for=\"progressInput\"\n                >\n                Progress</Label>\n              <Col sm={2}>\n                <Input\n                  type=\"number\"\n                  name=\"progress\"\n                  id=\"progressInput\"\n                  placeholder=\"00\"\n                  value={updateData.progress}\n                  onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              {/* <Label\n                for=\"progressRange\">\n                Progress</Label> */}\n              <Input\n                type=\"range\"\n                name=\"progress\"\n                id=\"progressRange\"\n                value={updateData.progress}\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\n            </FormGroup>\n            <FormGroup row>\n              <Label\n                for=\"progressNote\"\n                >\n                Write a note about your progress here</Label>\n              <Col sm={10}>\n                <Input\n                  type=\"textarea\"\n                  name=\"note\"\n                  id=\"progressNote\"\n                  onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\n              </Col>\n            </FormGroup>\n            <FormGroup check row>\n              <Col sm={{ size: 10, offset: 2 }}>\n                <Button>Submit</Button>\n              </Col>\n            </FormGroup>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default GoalUpdate;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NumberWidgetContainer from './components/NumberWidgetContainer/index';\nimport ListWidgetContainer from './components/ListWidgetContainer/index';\nimport GraphWidgetContainer from './components/GraphWidgetContainer';\nimport LoginButton from \"./components/LoginButton\"\nimport LogoutButton from \"./components/LogoutButton\"\nimport GoalCreation from './pages/GoalCreation';\nimport GoalUpdate from './pages/GoalUpdate'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path='/goal-creation'>\n          <GoalCreation />\n        </Route>\n        <Route path='/goal-update/:id'>\n          <GoalUpdate />\n        </Route>\n        <Route exact path='/'>\n          <div className=\"Home\">\n            {/* <LoginButton />\n                <LogoutButton /> */}\n            <ListWidgetContainer href=\"http://localhost:3001/api/stats/top\" heading=\"All Users Goals\" rowspan={3} />\n                <NumberWidgetContainer href=\"http://localhost:3001/api/goals/open\" heading=\"Active Goals\" />\n                <GraphWidgetContainer href=\"http://localhost:3001/api/goals/progression\" heading=\"Goals Achieved Over Time\" colspan={2} rowspan={2} />\n                <NumberWidgetContainer href=\"http://localhost:3001/api/goals/today\" heading=\"Today's Goals\" />\n                <NumberWidgetContainer href=\"http://localhost:3001/api/goals/urgent\" heading=\"'Urgent' Goals\" />\n                <NumberWidgetContainer href=\"http://localhost:3001/api/goals/response\" heading=\"7 Day Goal Tracker\" />\n                <NumberWidgetContainer href=\"http://localhost:3001/api/goals/solved\" heading=\"1 Month Goal Tracker\" />\n          </div>\n\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\"\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Auth0Provider\n    domain=\"bf2344.us.auth0.com\"\n    clientId=\"2kTSNwHhvrnK62M22s3YMGiilT25x9HP\"\n    redirectUri={window.location.origin}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n// create goals page, CSS to make each goal section expand the page on click \n\n// models - user, goals - progress\n\n//\n"],"sourceRoot":""}