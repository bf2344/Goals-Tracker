{"version":3,"sources":["components/Loading/index.js","components/Widget/index.js","components/NumberDisplay/index.js","components/Progress/index.js","components/NumberWidget/index.js","components/NumberWidgetContainer/index.js","components/ListDisplay/index.js","components/ListItem/index.js","components/ListWidget/index.js","components/ListWidgetContainer/index.js","components/GraphWidget/index.js","components/GraphWidgetContainer/index.js","components/GoalModal/index.js","pages/GoalCreation/index.js","pages/GoalUpdate/index.js","App.js","index.js"],"names":["Loading","className","xmlns","viewBox","version","y","x","enableBackground","height","width","transform","Component","Widget","props","spanStyles","colspan","gridColumn","rowspan","gridRow","style","this","heading","loading","children","defaultProps","NumberDisplay","max","undefined","value","Progress","min","innerWidthStyle","NumberWidget","showProgress","showWidget","NumberWidgetContainer","state","getData","bind","then","_","interval","setInterval","setState","axios","get","href","response","newState","data","hasOwnProperty","catch","error","console","log","ListDisplay","ListItem","label","ListWidget","listItems","slice","sort","a","b","sortedItems","sortListItems","length","map","item","index","ListWidgetContainer","values","GraphWidget","labels","datasets","chartOptions","responsive","maintainAspectRatio","scaleShowGridLines","scales","xAxes","ticks","fontFamily","fontSize","fontColor","gridLines","display","yAxes","beginAtZero","legend","nextProps","generateDatasets","forEach","push","fill","tension","borderColor","color","borderWidth","pointRadius","pointHitRadius","options","GraphWidgetContainer","GoalModal","buttonLabel","useState","modal","setModal","toggle","Modal","isOpen","showModal","ModalHeader","ModalBody","status","toUpperCase","GoalCreation","title","description","date","Date","popular","upload","checked","goalUpdates","inputValues","setInputValues","setShowModal","history","useHistory","useEffect","fetch","res","json","err","handleInputChange","name","handlePopularClick","Container","Row","Col","sm","md","lg","Form","FormGroup","Label","for","Input","type","id","placeholder","onChange","e","currentTarget","onSelect","onClick","FormText","check","Button","method","body","JSON","stringify","headers","setTimeout","GoalUpdate","goalData","setGoalData","progress","note","updateData","setUpdateData","useParams","backgroundColor","image","src","alt","row","size","offset","App","path","exact","ReactDOM","render","domain","clientId","redirectUri","window","location","origin","document","getElementById"],"mappings":"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","file":"static/js/main.5ff15857.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            // Display a simple SVG image \r\n            <svg className=\"Loading\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 42 42\" version=\"1.1\" y=\"0px\" x=\"0px\" enableBackground=\"new 0 0 42 42\">\r\n                <rect height=\"10\" width=\"7\" y=\".5\" x=\"17.5\" />\r\n                <rect height=\"10\" width=\"7\" y=\"31.5\" x=\"17.5\" />\r\n                <rect transform=\"matrix(.707 .707 -.707 .707 16.4 -19.6)\" height=\"9.89\" width=\"6.38\" y=\"5.02\" x=\"28.6\" />\r\n                <rect transform=\"matrix(.707 .707 -.707 .707 25.4 2.26)\" height=\"9.89\" width=\"6.38\" y=\"26.8\" x=\"6.77\" />\r\n                <rect height=\"7\" width=\"10\" y=\"17.5\" x=\"31.5\" />\r\n                <rect height=\"7\" width=\"10\" y=\"17.5\" x=\".5\" />\r\n                <rect transform=\"matrix(-.707 .707 -.707 -.707 76.7 31.8)\" height=\"9.89\" width=\"6.38\" y=\"26.8\" x=\"28.6\" />\r\n                <rect transform=\"matrix(-.707 .707 -.707 -.707 24.1 9.96)\" height=\"9.89\" width=\"6.38\" y=\"5.02\" x=\"6.77\" />\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport Loading from '../Loading/index';\r\nimport './index.css';\r\n\r\nclass Widget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Create inline styles to make grid elements span multiple rows/columns\r\n        this.spanStyles = {};\r\n        if (props.colspan !== 1) {\r\n            this.spanStyles.gridColumn = `span ${props.colspan}`;\r\n        }\r\n        if (props.rowspan !== 1) {\r\n            this.spanStyles.gridRow = `span ${props.rowspan}`;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.spanStyles} className=\"Widget\">\r\n                <div className=\"header\">\r\n                    <h2>\r\n                        {this.props.heading}\r\n                    </h2>\r\n                    {/* Conditionally show the loading spinner */}\r\n                    {this.props.loading ? <Loading /> : \"\"}\r\n                </div>\r\n                <div className=\"content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Provide default settings for when they aren't supplied\r\nWidget.defaultProps = {\r\n    heading: \"Unnamed Widget\",\r\n    colspan: 1,\r\n    rowspan: 1\r\n}\r\n\r\nexport default Widget;","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nclass NumberDisplay extends Component {\r\n    render() {\r\n        // Only display \"of xx\" when a max prop is available\r\n        let max = null;\r\n\r\n        if (this.props.max !== undefined) {\r\n            max =\r\n                <span className=\"max\">\r\n                    of {this.props.max}\r\n                </span>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"NumberDisplay\">\r\n                <span className=\"value\">\r\n                    {this.props.value}\r\n                </span>\r\n\r\n                {max}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NumberDisplay;","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nclass Progress extends Component {\r\n    render() {\r\n        let value = this.props.value;\r\n\r\n        // Limit value to min and max bounds\r\n        if (value < this.props.min) {\r\n            value = 0;\r\n        } else if (value > this.props.max) {\r\n            value = this.props.max;\r\n        }\r\n\r\n        // Adjust progress bar using inline styles\r\n        let innerWidthStyle = { width: `${(value / this.props.max) * 100}%` };\r\n\r\n        return (\r\n            <div className=\"Progress\">\r\n                <div className=\"inner\" style={innerWidthStyle} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Provide a default value when one isn't supplied\r\nProgress.defaultProps = {\r\n    value: 0\r\n}\r\n\r\nexport default Progress;","import React, { Component } from 'react';\r\nimport Widget from '../Widget/index';\r\nimport NumberDisplay from '../NumberDisplay/index';\r\nimport Progress from '../Progress/index';\r\nimport './index.css';\r\n\r\nclass NumberWidget extends Component {\r\n    // Decide whether to show widget\r\n    showWidget() {\r\n        // Show loading indicator while initial data is being fetched\r\n        if (this.props.value === undefined) {\r\n            return <p>Loading...</p>;\r\n        }\r\n\r\n        return <div className=\"NumberWidget\">\r\n            <NumberDisplay max={this.props.max} value={this.props.value} />\r\n            {/* Conditionally show the progress bar */}\r\n            {this.showProgress()}\r\n        </div>\r\n    }\r\n\r\n    // Decide whether to show a progress bar\r\n    showProgress() {\r\n        // Only show if the required min, max and value props are supplied\r\n        if (this.props.min !== undefined && this.props.max !== undefined && this.props.value !== undefined) {\r\n            return <Progress min={this.props.min} max={this.props.max} value={this.props.value} />;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Wrap the number display component in the generic wrapper\r\n            <Widget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} loading={this.props.loading}>\r\n                {this.showWidget()}\r\n            </Widget>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberWidget;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport NumberWidget from '../NumberWidget';\r\n\r\nclass NumberWidgetContainer extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            loading: false,\r\n            min: undefined,\r\n            max: undefined,\r\n            value: undefined\r\n        }\r\n\r\n        // Bind function to refer to component\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    // Fetch data when the component is added\r\n    componentDidMount() {\r\n        this.getData().then(_ => {\r\n            // Re-fetch every minute\r\n            this.interval = setInterval(this.getData, 60000);\r\n        });\r\n    }\r\n\r\n    // Fetch new data\r\n    getData() {\r\n        // Tell the Widget component we're currently loading\r\n        this.setState({ loading: true });\r\n\r\n        // Fetch data\r\n        return axios.get(this.props.href)\r\n            .then(response => {\r\n                // Build a new state\r\n                let newState = { loading: false };\r\n\r\n                // Populate state with new data\r\n                if (response.data.hasOwnProperty(\"min\")) {\r\n                    newState[\"min\"] = response.data.min;\r\n                }\r\n                if (response.data.hasOwnProperty(\"max\")) {\r\n                    newState[\"max\"] = response.data.max;\r\n                }\r\n                if (response.data.hasOwnProperty(\"value\")) {\r\n                    newState[\"value\"] = response.data.value;\r\n                }\r\n\r\n                // Update state with data\r\n                this.setState(newState);\r\n            })\r\n            .catch(error => {\r\n                // At least tell the Widget component we have stopped loading\r\n                console.log(error);\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Render the number widget\r\n            <NumberWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} min={this.state.min} max={this.state.max} value={this.state.value} loading={this.state.loading} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberWidgetContainer;","import React, { Component } from 'react';\r\n\r\n// Import styling\r\nimport './index.css';\r\n\r\nclass ListDisplay extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"ListDisplay\">\r\n                {this.props.children}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListDisplay;","import React, { Component } from 'react';\r\nimport Progress from '../Progress';\r\nimport './index.css';\r\n\r\nclass ListItem extends Component {\r\n    render() {\r\n        return (\r\n            <li className=\"ListItem\">\r\n                <div className=\"value\">{this.props.value}</div>\r\n                <div className=\"label\">\r\n                    {this.props.label}\r\n                    {/* Compare progress against others in the list */}\r\n                    <Progress min={this.props.min} max={this.props.max} value={this.props.value} />\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListItem;","import React, { Component } from 'react';\r\n\r\n// Import components\r\nimport Widget from '../Widget';\r\nimport ListDisplay from '../ListDisplay';\r\nimport ListItem from '../ListItem';\r\n\r\n// Import styling\r\nimport './index.css';\r\n\r\nclass ListWidget extends Component {\r\n    //Sort items in descending order\r\n    sortListItems() {\r\n        let sortedItems = this.props.listItems.slice();\r\n        return sortedItems.sort((a, b) => {\r\n            if (a.value > b.value) {\r\n                return -1;\r\n            } else if (a.value < b.value) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    // Decide whether to show widget\r\n    showWidget() {\r\n        let sortedItems = this.sortListItems();\r\n\r\n        // Show loading indicator while initial data is being fetched\r\n        if (this.props.listItems.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        // Get min/max values for progress bar\r\n        let min = 0;\r\n        let max = sortedItems[0].value;\r\n\r\n        return (\r\n            <ListDisplay>\r\n                {/* Add a ListItem for each piece of data */}\r\n                {sortedItems.map((item, index) => <ListItem key={item.label} label={item.label} value={item.value} min={min} max={max} />)}\r\n            </ListDisplay>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Wrap the list display component in the generic wrapper\r\n            <Widget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} loading={this.props.loading} >\r\n                <div className=\"ListWidget\">\r\n                    {/* Conditionally show the widget */}\r\n                    {this.showWidget()}\r\n                </div>\r\n            </Widget>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListWidget;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ListWidget from '../ListWidget/index';\r\n\r\nclass ListWidgetContainer extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        \r\n        this.state = {\r\n            loading: false,\r\n            values: []\r\n        }\r\n\r\n        // Bind function to refer to component\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    // Fetch data when the component is added\r\n    componentDidMount() {\r\n        this.getData().then(_ => {\r\n            // Re-fetch every minute\r\n            this.interval = setInterval(this.getData, 60000);\r\n        });\r\n    }\r\n\r\n    // Fetch new data\r\n    getData() {\r\n        // Tell the Widget component we're currently loading\r\n        this.setState({ loading: true });\r\n\r\n        return axios.get(this.props.href)\r\n            .then(response => {\r\n                // Update state with data\r\n                this.setState({ loading: false, values: response.data });\r\n            })\r\n            .catch(error => {\r\n                // At least tell the Widget component we have stopped loading\r\n                console.log(error);\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Render the list widget\r\n            <ListWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} listItems={this.state.values} loading={this.state.loading} />\r\n        );\r\n    }\r\n}\r\nexport default ListWidgetContainer;","import React, { Component } from 'react';\r\nimport Widget from '../Widget/index';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './index.css';\r\n\r\nclass GraphWidget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values: {\r\n                labels: [\"???\", \"???\", \"???\", \"???\", \"???\", \"???\", \"???\"],\r\n                datasets: []\r\n            },\r\n            chartOptions: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                scaleShowGridLines: false,\r\n                scales: {\r\n                    xAxes: [{\r\n                        ticks: {\r\n                            fontFamily: \"'Didact Gothic', sans-serif\",\r\n                            fontSize: 18,\r\n                            fontColor: \"#ecf0f1\",\r\n                        },\r\n                        gridLines: {\r\n                            display: true\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            fontFamily: \"'Didact Gothic', sans-serif\",\r\n                            fontSize: 18,\r\n                            fontColor: \"#ecf0f1\",\r\n                        },\r\n                        gridLines: {\r\n                            display: true\r\n                        }\r\n                    }],\r\n                },\r\n                legend: {\r\n                    display: false\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Update the state based on changing props\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.data !== nextProps.data) {\r\n            this.generateDatasets(nextProps);\r\n        }\r\n    }\r\n\r\n   \r\n    generateDatasets(props) {\r\n        let datasets = [];\r\n\r\n       \r\n        props.data.forEach(function (data) {\r\n            datasets.push({\r\n                label: data.label,\r\n                data: data.data,\r\n                fill: false,\r\n                tension: 0,\r\n                borderColor: data.color,\r\n                borderWidth: 8,\r\n                pointRadius: 0,\r\n                pointHitRadius: 10\r\n            });\r\n        }, this);\r\n\r\n       \r\n        this.setState({\r\n            values: {\r\n                datasets\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Wrap the graphing component in the generic wrapper\r\n            <Widget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} loading={this.props.loading}>\r\n                <div className=\"GraphWidget\">\r\n                    <Line data={this.state.values} options={this.state.chartOptions} />\r\n                </div>\r\n            </Widget>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GraphWidget;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport GraphWidget from '../GraphWidget/index';\r\n\r\nclass GraphWidgetContainer extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        // Set initial state\r\n        this.state = {\r\n            loading: false,\r\n            values: []\r\n        }\r\n\r\n        // Bind function to refer to component\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    // Fetch data when the component is added\r\n    componentDidMount() {\r\n        this.getData().then(_ => {\r\n            // Re-fetch every minute\r\n            this.interval = setInterval(this.getData, 60000);\r\n        });\r\n    }\r\n\r\n    // Fetch new data\r\n    getData() {\r\n        // Tell the Widget component we're currently loading\r\n        this.setState({ loading: true });\r\n\r\n        // Fetch data\r\n        return axios.get(this.props.href)\r\n            .then(response => {\r\n                // Update state with data\r\n                this.setState({ loading: false, data: response.data });\r\n            })\r\n            .catch(error => {\r\n                // At least tell the Widget component we have stopped loading\r\n                console.log(error);\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Render the graph widget\r\n            <GraphWidget heading={this.props.heading} colspan={this.props.colspan} rowspan={this.props.rowspan} data={this.state.data} loading={this.state.loading} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default GraphWidgetContainer;","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst GoalModal = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\r\n      <Modal isOpen={props.showModal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Goal Saved</ModalHeader>\r\n        <ModalBody>\r\n          YOUR GOAL HAS BEEN SUCCESSFULLY {props.status.toUpperCase()}\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoalModal;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, FormGroup, Label, Input, FormText, Container, Row, Col, Button } from 'reactstrap';\r\nimport './index.css';\r\nimport GoalModal from '../../components/GoalModal';\r\n\r\nconst GoalCreation = () => {\r\n  const [inputValues, setInputValues] = useState({\r\n    title: '',\r\n    description: '',\r\n    date: () => new Date(),\r\n    color: '',\r\n    popular: '',\r\n    upload: '',\r\n    checked: false,\r\n    goalUpdates: []\r\n  })\r\n  \r\n  const [showModal, setShowModal] = useState(false)\r\n  const history = useHistory()\r\n\r\n  const handleGoalSubmit = () => {\r\n    console.log(\"front end submit log\")\r\n    fetch('/api/user/goal/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify(inputValues),\r\n      headers: { \r\n        \"Content-type\": \"application/json\"\r\n    } \r\n    }).then(res => {\r\n      if(res){\r\n        // console.log(res.status === 200)\r\n        setShowModal(true)\r\n        setTimeout(() => {\r\n          history.push('/')\r\n        }, 2000);\r\n      } else {\r\n        console.log(res)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    fetch('api/user/goal/get')\r\n      .then(res => res.json())\r\n      .then(data => console.log(data))\r\n      .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  const handleInputChange = (name, value) => {\r\n    setInputValues({ ...inputValues, [name]: value })\r\n  }\r\n\r\n  const handlePopularClick = value => {\r\n    setInputValues({ ...inputValues, popular: value })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {showModal &&\r\n          <Col sm={12}>\r\n            <GoalModal showModal={showModal} className={showModal ? \"show\" : \"hide\"} buttonLabel=\"X\" status=\"created\" />\r\n          </Col>\r\n        }\r\n        <Col sm={12} md={9} lg={6} className='form-column'>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label for=\"exampleName\">Goal Name</Label>\r\n              <Input\r\n                type=\"name\"\r\n                name=\"title\"\r\n                id=\"exampleEmail\"\r\n                placeholder=\"with a placeholder\"\r\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleText\">Goal Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                id=\"exampleText\"\r\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleDate\">Goal End Date</Label>\r\n              <Input\r\n                type=\"date\"\r\n                name=\"date\"\r\n                id=\"exampleDate\"\r\n                placeholder=\"date placeholder\"\r\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleColor\">Color Code This Goal</Label>\r\n              <Input\r\n                type=\"color\"\r\n                name=\"color\"\r\n                id=\"exampleColor\"\r\n                placeholder=\"color placeholder\"\r\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleSelect\">Does your goal fall under one of these categories?</Label>\r\n              <Input type=\"select\" onChange={(e) => handlePopularClick(e.currentTarget.value)} name=\"select\" id=\"exampleSelect\">\r\n                <option\r\n                  name='financial'\r\n                  onSelect={() => handlePopularClick()}>\r\n                  Financial</option>\r\n                <option\r\n                  name='healthFitness'\r\n                  onClick={() => handlePopularClick()}>\r\n                  Health/Fitness</option>\r\n                <option\r\n                  name='personalWellbeing'\r\n                  onClick={() => handlePopularClick()}>\r\n                  Personal Wellbeing</option>\r\n                <option\r\n                  name='professionalAchievement'\r\n                  onClick={() => handlePopularClick()}>\r\n                  Professional Achievement</option>\r\n                <option\r\n                  name='personalAchievement'\r\n                  onClick={() => handlePopularClick()}>\r\n                  Personal Achievement</option>\r\n                <option\r\n                  name='habit'\r\n                  onClick={() => handlePopularClick()}>\r\n                  Build/Break A Habit</option>\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleFile\">Upload</Label>\r\n              <Input\r\n                type=\"file\"\r\n                name='file'\r\n                id=\"exampleFile\" />\r\n              <FormText\r\n                color=\"muted\">\r\n                Upload an image of your goal here\r\n              </FormText>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  onClick={() => setInputValues({ ...inputValues, checked: !inputValues.checked })} /> A Check Box\r\n              </Label>\r\n            </FormGroup>\r\n            <Button onClick={() => handleGoalSubmit()}>Submit</Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default GoalCreation;","import React, { useState, useEffect } from 'react';\r\nimport { Form, FormGroup, Label, Input, Container, Row, Col, Button } from 'reactstrap';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport GoalModal from '../../components/GoalModal';\r\nimport './index.css';\r\n\r\nconst GoalUpdate = () => {\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [goalData, setGoalData] = useState();\r\n  const [updateData, setUpdateData] = useState({\r\n    progress: 0,\r\n    note: \"\"\r\n  });\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/user/goal/get/${id}`)\r\n      .then(res => res.json()).then(data => setGoalData(data))\r\n      .catch(err => console.log(err))\r\n  }, [id]);\r\n\r\n  const handleInputChange = (name, value) => {\r\n    setUpdateData({ ...updateData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = () =>{\r\n    fetch(`/api/user/goal/update/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updateData)\r\n    })\r\n      .then(res => {\r\n        console.log(res.status)\r\n        if(res.status == 200){\r\n          setShowModal(true)\r\n          setTimeout(()=>{\r\n            history.push('/')\r\n          }, 2000)\r\n        } else{\r\n          console.log(\"something went wrong with the update\")\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const backgroundColor = goalData ? goalData.color : 'lightGreen';\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n      {showModal &&\r\n          <Col sm={12}>\r\n            <GoalModal showModal={showModal} className={showModal ? \"show\" : \"hide\"} buttonLabel=\"X\" status=\"updated\" />\r\n          </Col>\r\n        }\r\n        <Col sm={12} md={9} lg={6} style={{ backgroundColor }}>\r\n          <Form>\r\n            {goalData &&\r\n              <h2>{goalData.title}</h2>\r\n            }\r\n            {goalData && goalData.image &&\r\n              <img src={goalData.image} alt=\"picture of goal\" />\r\n            }\r\n            {goalData &&\r\n              <>\r\n                <p>{goalData.description}</p>\r\n                <p>Originally created on : {goalData.date}</p>\r\n              </>\r\n            }\r\n            <FormGroup row>\r\n              <Label\r\n                for=\"progressInput\"\r\n                >\r\n                Progress</Label>\r\n              <Col sm={2}>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"progress\"\r\n                  id=\"progressInput\"\r\n                  placeholder=\"00\"\r\n                  value={updateData.progress}\r\n                  onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              {/* <Label\r\n                for=\"progressRange\">\r\n                Progress</Label> */}\r\n              <Input\r\n                type=\"range\"\r\n                name=\"progress\"\r\n                id=\"progressRange\"\r\n                value={updateData.progress}\r\n                onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label\r\n                for=\"progressNote\"\r\n                >\r\n                Write a note about your progress here</Label>\r\n              <Col sm={10}>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"note\"\r\n                  id=\"progressNote\"\r\n                  onChange={(e) => handleInputChange(e.currentTarget.name, e.currentTarget.value)} />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup check row>\r\n              <Col sm={{ size: 10, offset: 2 }}>\r\n                <Button  onClick={()=> handleSubmit()}>Submit</Button>\r\n              </Col>\r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default GoalUpdate;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport NumberWidgetContainer from './components/NumberWidgetContainer/index';\r\nimport ListWidgetContainer from './components/ListWidgetContainer/index';\r\nimport GraphWidgetContainer from './components/GraphWidgetContainer';\r\nimport LoginButton from \"./components/LoginButton\"\r\nimport LogoutButton from \"./components/LogoutButton\"\r\nimport GoalCreation from './pages/GoalCreation';\r\nimport GoalUpdate from './pages/GoalUpdate'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Route path='/goal-creation'>\r\n          <GoalCreation />\r\n        </Route>\r\n        <Route path='/goal-update/:id'>\r\n          <GoalUpdate />\r\n        </Route>\r\n        <Route exact path='/'>\r\n          <div className=\"Home\">\r\n            {/* <LoginButton />\r\n                <LogoutButton /> */}\r\n            <ListWidgetContainer href=\"http://localhost:3001/api/stats/top\" heading=\"All Users Goals\" rowspan={3} />\r\n                <NumberWidgetContainer href=\"http://localhost:3001/api/goals/open\" heading=\"Active Goals\" />\r\n                <GraphWidgetContainer href=\"http://localhost:3001/api/goals/progression\" heading=\"Goals Achieved Over Time\" colspan={2} rowspan={2} />\r\n                <NumberWidgetContainer href=\"http://localhost:3001/api/goals/today\" heading=\"Today's Goals\" />\r\n                <NumberWidgetContainer href=\"http://localhost:3001/api/goals/urgent\" heading=\"'Urgent' Goals\" />\r\n                <NumberWidgetContainer href=\"http://localhost:3001/api/goals/response\" heading=\"7 Day Goal Tracker\" />\r\n                <NumberWidgetContainer href=\"http://localhost:3001/api/goals/solved\" heading=\"1 Month Goal Tracker\" />\r\n          </div>\r\n\r\n        </Route>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain=\"bf2344.us.auth0.com\"\r\n    clientId=\"2kTSNwHhvrnK62M22s3YMGiilT25x9HP\"\r\n    redirectUri={window.location.origin}\r\n  >\r\n    <App />\r\n  </Auth0Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// create goals page, CSS to make each goal section expand the page on click \r\n\r\n// models - user, goals - progress\r\n\r\n//\r\n"],"sourceRoot":""}